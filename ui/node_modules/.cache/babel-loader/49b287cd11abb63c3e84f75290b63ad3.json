{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/components/Filter.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    border: none;\\n    display: flex;\\n    width: 100px;\\n    height: 30px;\\n    margin: 3px;\\n    text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    border: 1px solid white\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport Button from 'components/Button';\nimport styled from 'styled-components';\nvar FilterContainer = styled.form(_templateObject());\nvar StyledFilterItem = styled.input(_templateObject2());\n\nvar Filter = function Filter(_ref) {\n  var setFilter = _ref.setFilter,\n      filter = _ref.filter,\n      clearFilter = _ref.clearFilter;\n  return React.createElement(Formik, {\n    initialValues: filter,\n    validate: function validate(values) {\n      var errors = {};\n      console.log(values);\n\n      if (!values.startDate) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values) {\n      return setFilter(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleReset = _ref2.handleReset,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(FilterContainer, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"startDate\",\n      onChange: handleChange,\n      value: values.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"endDate\",\n      onChange: handleChange,\n      value: values.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Start Time\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"startTime\",\n      onChange: handleChange,\n      value: values.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"End Time\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"endTime\",\n      onChange: handleChange,\n      value: values.endTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      inverse: true,\n      value: \"Filter\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      inverse: true,\n      value: \"Clear Filter\",\n      type: \"button\",\n      onClick: function onClick() {\n        clearFilter();\n        handleReset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/components/Filter.jsx"],"names":["React","Formik","Button","styled","FilterContainer","form","StyledFilterItem","input","Filter","setFilter","filter","clearFilter","values","errors","console","log","startDate","email","test","touched","handleChange","handleSubmit","handleReset","isSubmitting","endDate","startTime","endTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik} from 'formik';\nimport Button from 'components/Button';\nimport styled from 'styled-components';\n\nconst FilterContainer = styled.form`\n    display:flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid white\n`;\n\nconst StyledFilterItem = styled.input`\n    border: none;\n    display: flex;\n    width: 100px;\n    height: 30px;\n    margin: 3px;\n    text-align: center;\n`\n\n\nconst Filter = ({setFilter, filter, clearFilter}) => {\n\n        return <Formik\n                    initialValues={filter}\n                    validate={values => {\n                        let errors = {};\n                        console.log(values)\n                        if (!values.startDate) {\n                          errors.email = 'Required';\n                        } else if (\n                          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(\n                            values.email\n                          )\n                        ) {\n                          errors.email = 'Invalid email address';\n                        }\n                        return errors;\n                    }\n                    }\n                    onSubmit={values =>  setFilter(values)}\n            >{({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleSubmit,\n                handleReset,\n                isSubmitting,\n            }) =>  <FilterContainer onSubmit={handleSubmit}>\n                <label>Start Date</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"startDate\"\n                    onChange={handleChange}\n                    value={values.startDate}\n                />\n                <label>End Date</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"endDate\"\n                    onChange={handleChange}\n                    value={values.endDate}\n                />\n                <label>Start Time</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"startTime\"\n                    onChange={handleChange}\n                    value={values.startTime}\n                />\n                <label>End Time</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"endTime\"\n                    onChange={handleChange}\n                    value={values.endTime}\n                />\n                <Button inverse value='Filter' type='submit' />\n                <Button inverse value='Clear Filter' type='button' onClick={ () => {\n                    clearFilter();\n                    handleReset();\n                }} />\n            </FilterContainer>}\n            \n            \n            </Formik>\n    }\n\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}