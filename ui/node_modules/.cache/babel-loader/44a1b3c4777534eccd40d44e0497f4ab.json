{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/components/Filter.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    border: none;\\n    display: flex;\\n    width: 100px;\\n    height: 30px;\\n    margin: 3px;\\n    text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    border: 1px solid white\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport Button from 'components/Button';\nimport styled from 'styled-components';\nimport moment from 'moment';\nvar FilterContainer = styled.form(_templateObject());\nvar StyledFilterItem = styled.input(_templateObject2());\n\nvar Filter = function Filter(_ref) {\n  var setFilter = _ref.setFilter,\n      filter = _ref.filter,\n      clearFilter = _ref.clearFilter;\n  return React.createElement(Formik, {\n    initialValues: filter,\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!moment(values.startDate, 'YYYY-MM-DD', true).isValid()) {\n        errors.startDate = 'Must be valid date';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values) {\n      return setFilter(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleReset = _ref2.handleReset,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(FilterContainer, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"startDate\",\n      onChange: handleChange,\n      value: values.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"endDate\",\n      onChange: handleChange,\n      value: values.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Start Time\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"startTime\",\n      onChange: handleChange,\n      value: values.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"End Time\"), React.createElement(StyledFilterItem, {\n      type: \"text\",\n      name: \"endTime\",\n      onChange: handleChange,\n      value: values.endTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Button, {\n      inverse: true,\n      value: \"Filter\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      inverse: true,\n      value: \"Clear Filter\",\n      type: \"button\",\n      onClick: function onClick() {\n        clearFilter();\n        handleReset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/components/Filter.jsx"],"names":["React","Formik","Button","styled","moment","FilterContainer","form","StyledFilterItem","input","Filter","setFilter","filter","clearFilter","values","errors","startDate","isValid","touched","handleChange","handleSubmit","handleReset","isSubmitting","endDate","startTime","endTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik} from 'formik';\nimport Button from 'components/Button';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst FilterContainer = styled.form`\n    display:flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid white\n`;\n\nconst StyledFilterItem = styled.input`\n    border: none;\n    display: flex;\n    width: 100px;\n    height: 30px;\n    margin: 3px;\n    text-align: center;\n`\n\n\nconst Filter = ({setFilter, filter, clearFilter}) => {\n\n        return <Formik\n                    initialValues={filter}\n                    validate={values => {\n                        let errors = {};\n                        if (!moment(values.startDate, 'YYYY-MM-DD', true).isValid()) {\n                          errors.startDate = 'Must be valid date';\n                        } \n                        return errors;\n                    }}\n                    onSubmit={values =>  setFilter(values)}\n            >{({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleSubmit,\n                handleReset,\n                isSubmitting,\n            }) =>  <FilterContainer onSubmit={handleSubmit}>\n                <label>Start Date</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"startDate\"\n                    onChange={handleChange}\n                    value={values.startDate}\n                />\n                <label>End Date</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"endDate\"\n                    onChange={handleChange}\n                    value={values.endDate}\n                />\n                <label>Start Time</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"startTime\"\n                    onChange={handleChange}\n                    value={values.startTime}\n                />\n                <label>End Time</label>\n                <StyledFilterItem \n                    type=\"text\"\n                    name=\"endTime\"\n                    onChange={handleChange}\n                    value={values.endTime}\n                />\n                <Button inverse value='Filter' type='submit' />\n                <Button inverse value='Clear Filter' type='button' onClick={ () => {\n                    clearFilter();\n                    handleReset();\n                }} />\n            </FilterContainer>}\n            \n            \n            </Formik>\n    }\n\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}