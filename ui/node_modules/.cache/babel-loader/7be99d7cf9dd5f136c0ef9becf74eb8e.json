{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/components/Filter.jsx\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    color: red;\\n    font-size: 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border: none;\\n  display: flex;\\n  width: 100px;\\n  height: 30px;\\n  margin: 3px;\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  border: 1px solid white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport Button from \"components/Button\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nvar FilterContainer = styled.form(_templateObject());\nvar StyledInput = styled.input(_templateObject2());\nvar StyledFilterItem = styled.div(_templateObject3());\nvar StyledError = styled.label(_templateObject4());\n\nvar Filter = function Filter(_ref) {\n  var setFilter = _ref.setFilter,\n      filter = _ref.filter,\n      clearFilter = _ref.clearFilter;\n  return React.createElement(Formik, {\n    initialValues: filter,\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!moment(values.startDate, \"YYYY-MM-DD\", true).isValid()) {\n        errors.startDate = \"Must be valid date\";\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values) {\n      return setFilter(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleReset = _ref2.handleReset,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(FilterContainer, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(StyledFilterItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(StyledInput, {\n      type: \"text\",\n      name: \"startDate\",\n      onChange: handleChange,\n      value: values.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(StyledError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, errors.startDate)), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(StyledFilterItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(StyledInput, {\n      type: \"text\",\n      name: \"endDate\",\n      onChange: handleChange,\n      value: values.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Start Time\"), React.createElement(StyledFilterItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(StyledInput, {\n      type: \"text\",\n      name: \"startTime\",\n      onChange: handleChange,\n      value: values.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, errors.startTime)), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"End Time\"), React.createElement(StyledFilterItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(StyledInput, {\n      type: \"text\",\n      name: \"endTime\",\n      onChange: handleChange,\n      value: values.endTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Button, {\n      inverse: true,\n      value: \"Filter\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Button, {\n      inverse: true,\n      value: \"Clear Filter\",\n      type: \"button\",\n      onClick: function onClick() {\n        clearFilter();\n        handleReset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/components/Filter.jsx"],"names":["React","Formik","Button","styled","moment","FilterContainer","form","StyledInput","input","StyledFilterItem","div","StyledError","label","Filter","setFilter","filter","clearFilter","values","errors","startDate","isValid","touched","handleChange","handleSubmit","handleReset","isSubmitting","endDate","startTime","endTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport Button from \"components/Button\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\n\nconst FilterContainer = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid white;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  display: flex;\n  width: 100px;\n  height: 30px;\n  margin: 3px;\n  text-align: center;\n`;\n\nconst StyledFilterItem = styled.div`\n  display: block;\n`;\n\nconst StyledError = styled.label`\n    color: red;\n    font-size: 10px;\n`\nconst Filter = ({ setFilter, filter, clearFilter }) => {\n  return (\n    <Formik\n      initialValues={filter}\n      validate={values => {\n        let errors = {};\n        if (!moment(values.startDate, \"YYYY-MM-DD\", true).isValid()) {\n          errors.startDate = \"Must be valid date\";\n        }\n        return errors;\n      }}\n      onSubmit={values => setFilter(values)}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleReset,\n        isSubmitting\n      }) => (\n        <FilterContainer onSubmit={handleSubmit}>\n          <label>Start Date</label>\n          <StyledFilterItem>\n            <StyledInput\n              type=\"text\"\n              name=\"startDate\"\n              onChange={handleChange}\n              value={values.startDate}\n            /><StyledError>{errors.startDate}</StyledError>\n          </StyledFilterItem>\n          <label>End Date</label>\n          <StyledFilterItem>\n            <StyledInput\n              type=\"text\"\n              name=\"endDate\"\n              onChange={handleChange}\n              value={values.endDate}\n            />\n          </StyledFilterItem>\n          <label>Start Time</label>\n          <StyledFilterItem>\n            <StyledInput\n              type=\"text\"\n              name=\"startTime\"\n              onChange={handleChange}\n              value={values.startTime}\n            /><label>{errors.startTime}</label>\n          </StyledFilterItem>\n          <label>End Time</label>\n          <StyledFilterItem>\n            <StyledInput\n              type=\"text\"\n              name=\"endTime\"\n              onChange={handleChange}\n              value={values.endTime}\n            />\n          </StyledFilterItem>\n          <Button inverse value=\"Filter\" type=\"submit\" />\n          <Button\n            inverse\n            value=\"Clear Filter\"\n            type=\"button\"\n            onClick={() => {\n              clearFilter();\n              handleReset();\n            }}\n          />\n        </FilterContainer>\n      )}\n    </Formik>\n  );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}