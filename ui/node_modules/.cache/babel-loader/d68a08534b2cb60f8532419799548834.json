{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 70vh;\\n  margin: 30px;\\n  padding: 20px;\\n  overflow: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport { lightGreen } from 'variables';\nimport { loadUserMeals, deleteMeal, saveNewMeal } from 'Api';\nimport { append, without, contains, keys, propEq, prepend, groupBy, prop } from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\nvar Body = styled.div(_templateObject(), lightGreen);\n\nvar CalorieLogger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalorieLogger, _Component);\n\n  function CalorieLogger() {\n    var _this;\n\n    _classCallCheck(this, CalorieLogger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalorieLogger).call(this));\n\n    _this.filterMeals = function (filters) {//stopped here\n    };\n\n    _this.toggleEditing = function (id) {\n      contains(id, _this.state.editingIndexes) ? _this.setState(function (prevState) {\n        return {\n          editingIndexes: without(id, prevState.editingIndexes)\n        };\n      }) : _this.setState(function (prevState) {\n        return {\n          editingIndexes: append(id, prevState.editingIndexes)\n        };\n      });\n    };\n\n    _this.setMeals =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var mealResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadUserMeals();\n\n            case 2:\n              mealResponse = _context.sent;\n              _context.t0 = _this;\n              _context.next = 6;\n              return mealResponse.json();\n\n            case 6:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                meals: _context.t1\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t2);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.saveMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(meal) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return saveNewMeal(meal);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(meal) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!meal.id) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _context3.next = 3;\n                return deleteMeal(meal.id);\n\n              case 3:\n                //remove meal from state\n                _this.setState(function (prevState) {\n                  return {\n                    meals: without(propEq('id', meal.id), prevState.meals)\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.setLoggedIn = function () {\n      return _this.setState({\n        loggedIn: true\n      });\n    };\n\n    _this.addNewMeal = function () {\n      return _this.setState(function (prevState) {\n        return {\n          meals: prepend({}, prevState.meals)\n        };\n      });\n    };\n\n    _this.state = {\n      loggedIn: sessionStorage.getItem('jwt') !== null,\n      meals: [],\n      editingIndexes: []\n    };\n    return _this;\n  }\n\n  _createClass(CalorieLogger, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.loggedIn) {\n        this.setMeals();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!prevState.loggedIn && this.state.loggedIn) {\n        //load the meals\n        this.setMeals();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          meals = _this$state.meals,\n          editingIndexes = _this$state.editingIndexes;\n\n      var getDay = function getDay(date) {\n        return moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD');\n      };\n\n      var dayGroups = groupBy(function (meal) {\n        return getDay(prop('created_dt', meal));\n      })(meals);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Header, {\n        toggleSignUp: this.props.toggleSignUp,\n        setUserLoggedIn: this.setLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"User Meals:\"), React.createElement(Button, {\n        inverse: true,\n        value: \"add meal\",\n        onClick: this.addNewMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, keys(dayGroups).map(function (date, idx) {\n        return React.createElement(TableItemGroup, {\n          day: date,\n          meals: dayGroups[date],\n          toggleEditing: _this2.toggleEditing,\n          editingIndexes: editingIndexes,\n          idx: idx,\n          saveMeal: _this2.saveMeal,\n          deleteMeal: _this2.deleteMeal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return CalorieLogger;\n}(Component);\n\nexport default CalorieLogger;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx"],"names":["React","Component","Header","Table","styled","lightGreen","loadUserMeals","deleteMeal","saveNewMeal","append","without","contains","keys","propEq","prepend","groupBy","prop","Button","TableItemGroup","moment","Filter","Body","div","CalorieLogger","filterMeals","filters","toggleEditing","id","state","editingIndexes","setState","prevState","setMeals","mealResponse","json","meals","saveMeal","meal","setLoggedIn","loggedIn","addNewMeal","sessionStorage","getItem","prevProps","getDay","date","format","dayGroups","props","toggleSignUp","map","idx"],"mappings":"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","sourcesContent":["import React, {Component,} from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport {lightGreen} from 'variables';\nimport {loadUserMeals, deleteMeal, saveNewMeal} from 'Api';\nimport {append, without, contains, keys, propEq, prepend, groupBy, prop} from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\n\nconst Body = styled.div`\n  background-color: ${lightGreen};\n  height: 70vh;\n  margin: 30px;\n  padding: 20px;\n  overflow: auto;\n`;\n\nclass CalorieLogger extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: sessionStorage.getItem('jwt') !== null,\n            meals:[],\n            editingIndexes: []\n\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.loggedIn){\n            this.setMeals();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(!prevState.loggedIn && this.state.loggedIn){\n            //load the meals\n            this.setMeals();\n        }\n    }\n\n    filterMeals = filters => {\n        //stopped here\n    }\n\n    toggleEditing = id => {\n        contains(id, this.state.editingIndexes) ? \n        this.setState(prevState => ({editingIndexes: without(id, prevState.editingIndexes)})) :\n        this.setState(prevState => ({editingIndexes: append(id, prevState.editingIndexes)}))\n    }\n\n    setMeals = async () => {\n        const mealResponse = await loadUserMeals();\n        this.setState({meals: await mealResponse.json()});\n    }\n\n    saveMeal = async meal => {\n        await saveNewMeal(meal)\n    }\n\n    deleteMeal = async meal => {\n        \n        if(meal.id) {\n            await deleteMeal(meal.id)\n        }\n        //remove meal from state\n        this.setState(prevState => ({meals: without(propEq('id', meal.id), prevState.meals)}));\n    }\n\n    setLoggedIn = () => this.setState({loggedIn:true});\n\n    addNewMeal= () => this.setState(prevState => ({meals: prepend({}, prevState.meals)}));\n\n\n    render(){\n        const {meals, editingIndexes} = this.state;\n\n        const getDay = date => moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')\n\n        const dayGroups = groupBy(meal => getDay(prop('created_dt', meal)))(meals);\n        \n\n        return <div>\n                    <Header toggleSignUp={this.props.toggleSignUp}  setUserLoggedIn={this.setLoggedIn}/>\n                    <Body>\n                        <h3>User Meals:</h3>\n                        <Button inverse value='add meal' onClick={this.addNewMeal}/>\n                        <Filter />\n                        <Table >{keys(dayGroups).map((date, idx) => \n                            <TableItemGroup \n                                day={date}\n                                meals={dayGroups[date]}\n                                toggleEditing={this.toggleEditing}\n                                editingIndexes={editingIndexes} \n                                idx={idx}\n                                saveMeal={this.saveMeal}\n                                deleteMeal={this.deleteMeal}\n                            />\n                        )}</Table>\n        \n                    </Body>\n               \n               </div>\n    }\n}\n\n\nexport default CalorieLogger;\n"]},"metadata":{},"sourceType":"module"}