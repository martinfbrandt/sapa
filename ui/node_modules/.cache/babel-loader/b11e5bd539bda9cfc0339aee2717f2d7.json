{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 70vh;\\n  margin: 30px;\\n  padding: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport { lightGreen } from 'variables';\nimport { loadUserMeals } from 'Api';\nimport { prepend } from 'ramda';\nvar Body = styled.div(_templateObject(), lightGreen);\n\nvar CalorieLogger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalorieLogger, _Component);\n\n  function CalorieLogger() {\n    var _this;\n\n    _classCallCheck(this, CalorieLogger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalorieLogger).call(this));\n    _this.setMeals =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var mealResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadUserMeals();\n\n            case 2:\n              mealResponse = _context.sent;\n              _context.t0 = _this;\n              _context.next = 6;\n              return mealResponse.json();\n\n            case 6:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                meals: _context.t1\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t2);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.setLoggedIn = function () {\n      return _this.setState({\n        loggedIn: true\n      });\n    };\n\n    _this.addNewMeal = function () {\n      return _this.setState(function (prevState) {\n        return {\n          meals: prepend({}, prevState.meals)\n        };\n      });\n    };\n\n    _this.state = {\n      loggedIn: sessionStorage.getItem('jwt') !== null,\n      meals: []\n    };\n    return _this;\n  }\n\n  _createClass(CalorieLogger, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.loggedIn) {\n        this.setMeals();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!prevState.loggedIn && this.state.loggedIn) {\n        //load the meals\n        this.setMeals();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var meals = this.state.meals;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Header, {\n        toggleSignUp: this.props.toggleSignUp,\n        setUserLoggedIn: this.setLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Button, {\n        value: \"add meal\",\n        onClick: this.addNewMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"User Meals:\"), React.createElement(Table, {\n        meals: meals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CalorieLogger;\n}(Component);\n\nexport default CalorieLogger;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx"],"names":["React","Component","Header","Table","styled","lightGreen","loadUserMeals","prepend","Body","div","CalorieLogger","setMeals","mealResponse","json","meals","setState","setLoggedIn","loggedIn","addNewMeal","prevState","state","sessionStorage","getItem","prevProps","props","toggleSignUp"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAAQC,aAAR,QAA4B,KAA5B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AAEA,IAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAV,oBACYJ,UADZ,CAAV;;IAOMK,a;;;;;AACF,2BAAc;AAAA;;AAAA;;AACV;AADU,UAqBdC,QArBc;AAAA;AAAA;AAAA;AAAA,6BAqBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBL,aAAa,EADjC;;AAAA;AACDM,cAAAA,YADC;AAAA;AAAA;AAAA,qBAEqBA,YAAY,CAACC,IAAb,EAFrB;;AAAA;AAAA;AAAA;AAEQC,gBAAAA,KAFR;AAAA;;AAAA,0BAEFC,QAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBG;;AAAA,UA0BdC,WA1Bc,GA0BA;AAAA,aAAM,MAAKD,QAAL,CAAc;AAACE,QAAAA,QAAQ,EAAC;AAAV,OAAd,CAAN;AAAA,KA1BA;;AAAA,UA4BdC,UA5Bc,GA4BF;AAAA,aAAM,MAAKH,QAAL,CAAc,UAAAI,SAAS;AAAA,eAAK;AAACL,UAAAA,KAAK,EAAEP,OAAO,CAAC,EAAD,EAAKY,SAAS,CAACL,KAAf;AAAf,SAAL;AAAA,OAAvB,CAAN;AAAA,KA5BE;;AAEV,UAAKM,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAEI,cAAc,CAACC,OAAf,CAAuB,KAAvB,MAAkC,IADnC;AAETR,MAAAA,KAAK,EAAC;AAFG,KAAb;AAFU;AAMb;;;;wCAEkB;AACf,UAAG,KAAKM,KAAL,CAAWH,QAAd,EAAuB;AACnB,aAAKN,QAAL;AACH;AACJ;;;uCAEkBY,S,EAAWJ,S,EAAU;AACpC,UAAG,CAACA,SAAS,CAACF,QAAX,IAAuB,KAAKG,KAAL,CAAWH,QAArC,EAA8C;AAC1C;AACA,aAAKN,QAAL;AACH;AACJ;;;6BAYO;AAAA,UACGG,KADH,GACY,KAAKM,KADjB,CACGN,KADH;AAEJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKU,KAAL,CAAWC,YAAjC;AAAgD,QAAA,eAAe,EAAE,KAAKT,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAEK,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAE,KAAKE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL,EAGK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAHL,CAAP;AASH;;;;EA3CuBb,S;;AA+C5B,eAAeS,aAAf","sourcesContent":["import React, {Component,} from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport {lightGreen} from 'variables';\nimport {loadUserMeals} from 'Api';\nimport {prepend} from 'ramda';\n\nconst Body = styled.div`\n  background-color: ${lightGreen};\n  height: 70vh;\n  margin: 30px;\n  padding: 20px;\n`;\n\nclass CalorieLogger extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: sessionStorage.getItem('jwt') !== null,\n            meals:[],\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.loggedIn){\n            this.setMeals();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(!prevState.loggedIn && this.state.loggedIn){\n            //load the meals\n            this.setMeals();\n        }\n    }\n\n    setMeals = async () => {\n        const mealResponse = await loadUserMeals();\n        this.setState({meals: await mealResponse.json()});\n    }\n\n    setLoggedIn = () => this.setState({loggedIn:true});\n\n    addNewMeal= () => this.setState(prevState => ({meals: prepend({}, prevState.meals)}));\n\n\n    render(){\n        const {meals} = this.state;\n        return <div>\n                    <Header toggleSignUp={this.props.toggleSignUp}  setUserLoggedIn={this.setLoggedIn}/>\n                    <Button value='add meal' onClick={this.addNewMeal}/>\n                    <Body>\n                        <h3>User Meals:</h3>\n                        <Table meals={meals}/>\n                    </Body>\n               \n               </div>\n    }\n}\n\n\nexport default CalorieLogger;\n"]},"metadata":{},"sourceType":"module"}