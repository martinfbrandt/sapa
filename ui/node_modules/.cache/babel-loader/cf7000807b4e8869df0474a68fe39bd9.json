{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 70vh;\\n  margin: 30px;\\n  padding: 20px;\\n  overflow: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport { lightGreen } from 'variables';\nimport { loadUserMeals, deleteMeal, saveNewMeal } from 'Api';\nimport { append, without, contains, concat, set, lensPath, keys, propEq, prepend, groupBy, prop } from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\nvar Body = styled.div(_templateObject(), lightGreen);\nvar initialState = {\n  startTime: '00:00:00',\n  endTime: '23:59:59',\n  startDate: '1900-01-01',\n  endDate: '2090-01-01'\n};\nvar dateConstant = 'YYYY-MM-DD HH:mm:ss';\n\nvar convertStringToMoment = function convertStringToMoment(date) {\n  return moment(date, dateConstant).utc();\n};\n\nvar CalorieLogger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalorieLogger, _Component);\n\n  function CalorieLogger() {\n    var _this;\n\n    _classCallCheck(this, CalorieLogger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalorieLogger).call(this));\n\n    _this.setFilter = function (filters) {\n      _this.setState(function (prevState) {\n        return set(lensPath(['filter']), filters, prevState);\n      });\n    };\n\n    _this.filterMeals = function (meals) {\n      var filter = _this.state.filter;\n      var startDateTimeString = concat(concat(filter.startDate, ' '), filter.startTime);\n      var endDateTimeString = concat(concat(filter.endDate, ' '), filter.endTime);\n      var startDateTime = convertStringToMoment(startDateTimeString);\n      var endDateTime = convertStringToMoment(endDateTimeString);\n\n      var isInRange = function isInRange(dateTimeMoment) {\n        return startDateTime.isBefore(dateTimeMoment) && endDateTime.isAfter(dateTimeMoment);\n      };\n\n      console.log(meals.filter(function (meal) {\n        return isInRange(convertStringToMoment(prop('created_dt', meal)));\n      }));\n      return meals.filter(function (meal) {\n        return isInRange(convertStringToMoment(prop('created_dt', meal)));\n      });\n    };\n\n    _this.toggleEditing = function (id) {\n      contains(id, _this.state.editingIndexes) ? _this.setState(function (prevState) {\n        return {\n          editingIndexes: without(id, prevState.editingIndexes)\n        };\n      }) : _this.setState(function (prevState) {\n        return {\n          editingIndexes: append(id, prevState.editingIndexes)\n        };\n      });\n    };\n\n    _this.setMeals =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var mealResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadUserMeals();\n\n            case 2:\n              mealResponse = _context.sent;\n              _context.t0 = _this;\n              _context.next = 6;\n              return mealResponse.json();\n\n            case 6:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                meals: _context.t1\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t2);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.saveMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(meal) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return saveNewMeal(meal);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(meal) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!meal.id) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _context3.next = 3;\n                return deleteMeal(meal.id);\n\n              case 3:\n                //remove meal from state\n                _this.setState(function (prevState) {\n                  return {\n                    meals: without(propEq('id', meal.id), prevState.meals)\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.setLoggedIn = function () {\n      return _this.setState({\n        loggedIn: true\n      });\n    };\n\n    _this.addNewMeal = function () {\n      return _this.setState(function (prevState) {\n        return {\n          meals: prepend({\n            \"created_dt\": moment().format(dateConstant)\n          }, prevState.meals)\n        };\n      });\n    };\n\n    _this.state = {\n      loggedIn: sessionStorage.getItem('jwt') !== null,\n      meals: [],\n      editingIndexes: [],\n      filter: initialState\n    };\n    return _this;\n  }\n\n  _createClass(CalorieLogger, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.loggedIn) {\n        this.setMeals();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!prevState.loggedIn && this.state.loggedIn) {\n        //load the meals\n        this.setMeals();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          meals = _this$state.meals,\n          editingIndexes = _this$state.editingIndexes,\n          filter = _this$state.filter;\n\n      var getDay = function getDay(date) {\n        return moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD');\n      };\n\n      var dayGroups = groupBy(function (meal) {\n        return getDay(prop('created_dt', meal));\n      })(this.filterMeals(meals));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Header, {\n        toggleSignUp: this.props.toggleSignUp,\n        setUserLoggedIn: this.setLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"User Meals:\"), React.createElement(Button, {\n        inverse: true,\n        value: \"add meal\",\n        onClick: this.addNewMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        filter: filter,\n        setFilter: this.setFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, keys(dayGroups).map(function (date, idx) {\n        return React.createElement(TableItemGroup, {\n          day: date,\n          meals: dayGroups[date],\n          toggleEditing: _this2.toggleEditing,\n          editingIndexes: editingIndexes,\n          idx: idx,\n          saveMeal: _this2.saveMeal,\n          deleteMeal: _this2.deleteMeal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return CalorieLogger;\n}(Component);\n\nexport default CalorieLogger;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx"],"names":["React","Component","Header","Table","styled","lightGreen","loadUserMeals","deleteMeal","saveNewMeal","append","without","contains","concat","set","lensPath","keys","propEq","prepend","groupBy","prop","Button","TableItemGroup","moment","Filter","Body","div","initialState","startTime","endTime","startDate","endDate","dateConstant","convertStringToMoment","date","utc","CalorieLogger","setFilter","filters","setState","prevState","filterMeals","meals","filter","state","startDateTimeString","endDateTimeString","startDateTime","endDateTime","isInRange","dateTimeMoment","isBefore","isAfter","console","log","meal","toggleEditing","id","editingIndexes","setMeals","mealResponse","json","saveMeal","setLoggedIn","loggedIn","addNewMeal","format","sessionStorage","getItem","prevProps","getDay","dayGroups","props","toggleSignUp","map","idx"],"mappings":"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","sourcesContent":["import React, {Component,} from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport {lightGreen} from 'variables';\nimport {loadUserMeals, deleteMeal, saveNewMeal} from 'Api';\nimport {append, without, contains, concat, set, lensPath, keys, propEq, prepend, groupBy, prop} from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\n\nconst Body = styled.div`\n  background-color: ${lightGreen};\n  height: 70vh;\n  margin: 30px;\n  padding: 20px;\n  overflow: auto;\n`;\n\nconst initialState = {\n    startTime: '00:00:00',\n    endTime: '23:59:59',\n    startDate: '1900-01-01',\n    endDate: '2090-01-01'\n}\n\nconst dateConstant = 'YYYY-MM-DD HH:mm:ss'\n\nconst convertStringToMoment = date => moment(date, dateConstant).utc()\n\nclass CalorieLogger extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: sessionStorage.getItem('jwt') !== null,\n            meals:[],\n            editingIndexes: [],\n            filter: initialState\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.loggedIn){\n            this.setMeals();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(!prevState.loggedIn && this.state.loggedIn){\n            //load the meals\n            this.setMeals();\n        }\n    }\n\n    setFilter = filters => {\n        this.setState(prevState => set(lensPath(['filter']), filters, prevState))\n    }\n\n    filterMeals = meals => {\n        const {filter} = this.state;\n\n        const startDateTimeString = concat(concat(filter.startDate,' '), filter.startTime);\n        const endDateTimeString = concat(concat(filter.endDate,' '), filter.endTime);\n\n        const startDateTime = convertStringToMoment(startDateTimeString);\n        const endDateTime = convertStringToMoment(endDateTimeString);\n        \n        const isInRange = dateTimeMoment => startDateTime.isBefore(dateTimeMoment) && endDateTime.isAfter(dateTimeMoment)\n        \n        console.log(meals.filter(meal => isInRange(convertStringToMoment(prop('created_dt', meal)))))\n\n        return meals.filter(meal => isInRange(convertStringToMoment(prop('created_dt', meal))));\n\n    }\n\n    toggleEditing = id => {\n        contains(id, this.state.editingIndexes) ? \n        this.setState(prevState => ({editingIndexes: without(id, prevState.editingIndexes)})) :\n        this.setState(prevState => ({editingIndexes: append(id, prevState.editingIndexes)}))\n    }\n\n    setMeals = async () => {\n        const mealResponse = await loadUserMeals();\n        this.setState({meals: await mealResponse.json()});\n    }\n\n    saveMeal = async meal => {\n        await saveNewMeal(meal)\n    }\n\n    deleteMeal = async meal => {\n        \n        if(meal.id) {\n            await deleteMeal(meal.id)\n        }\n        //remove meal from state\n        this.setState(prevState => ({meals: without(propEq('id', meal.id), prevState.meals)}));\n    }\n\n    setLoggedIn = () => this.setState({loggedIn:true});\n\n    addNewMeal= () => this.setState(prevState => ({meals: prepend({\"created_dt\": moment().format(dateConstant)}, prevState.meals)}));\n\n\n    render(){\n        const {meals, editingIndexes, filter} = this.state;\n\n        const getDay = date => moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')\n\n        const dayGroups = groupBy(meal => getDay(prop('created_dt', meal)))(this.filterMeals(meals));\n        \n\n        return <div>\n                    <Header toggleSignUp={this.props.toggleSignUp}  setUserLoggedIn={this.setLoggedIn}/>\n                    <Body>\n                        <h3>User Meals:</h3>\n                        <Button inverse value='add meal' onClick={this.addNewMeal}/>\n                        <Filter filter={filter} setFilter={this.setFilter}/>\n                        <Table >{keys(dayGroups).map((date, idx) => \n                            <TableItemGroup \n                                day={date}\n                                meals={dayGroups[date]}\n                                toggleEditing={this.toggleEditing}\n                                editingIndexes={editingIndexes} \n                                idx={idx}\n                                saveMeal={this.saveMeal}\n                                deleteMeal={this.deleteMeal}\n                            />\n                        )}</Table>\n        \n                    </Body>\n               \n               </div>\n    }\n}\n\n\nexport default CalorieLogger;\n"]},"metadata":{},"sourceType":"module"}