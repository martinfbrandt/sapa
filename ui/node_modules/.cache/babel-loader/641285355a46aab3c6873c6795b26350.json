{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/SignUp.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 5px;\\n    display: flex;\\n    flex-direction: column;\\n    width: 300px;\\n    align-items: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    background-color: \", \";\\n    align-items: center;\\n    margin: 40px 80px 40px 80px;\\n    padding: 20px 0 20px 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { lightGreen } from 'variables';\nimport { Formik } from 'formik';\nimport { signUpUser } from 'Api';\nimport FormItem from 'components/FormItem';\nimport Button from 'components/Button';\nimport InlineError from 'components/InlineError';\nvar SignUpContainer = styled.div(_templateObject(), lightGreen);\nvar SignUpForm = styled.form(_templateObject2());\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp() {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this));\n\n    _this.userCreatedForm = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"User \".concat(_this.state.createdUser.email, \" created successfully\")), React.createElement(Button, {\n        onClick: _this.props.toggleSignUp,\n        value: \"Start logging\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    };\n\n    _this.setCreatedUser = function (user) {\n      return _this.setState({\n        createdUser: user\n      });\n    };\n\n    _this.state = {\n      createdUser: null,\n      errors: null\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.state.createdUser ? this.userCreatedForm() : React.createElement(Formik, {\n        initialValues: {\n          email: '',\n          password: '',\n          name: '',\n          daily_calorie_goal: \"2000\"\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit:\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(values, _ref) {\n            var setSubmitting, user;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    setSubmitting = _ref.setSubmitting;\n                    setTimeout(function () {\n                      setSubmitting(false);\n                    }, 400);\n                    _context.prev = 2;\n                    _context.next = 5;\n                    return signUpUser(values);\n\n                  case 5:\n                    user = _context.sent;\n\n                    _this2.setCreatedUser(user); //set the user returned from the promise\n\n\n                    _context.next = 12;\n                    break;\n\n                  case 9:\n                    _context.prev = 9;\n                    _context.t0 = _context[\"catch\"](2);\n\n                    _this2.setState({\n                      error: _context.t0.message\n                    });\n\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[2, 9]]);\n          }));\n\n          return function (_x, _x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, function (_ref3) {\n        var values = _ref3.values,\n            errors = _ref3.errors,\n            touched = _ref3.touched,\n            handleChange = _ref3.handleChange,\n            handleSubmit = _ref3.handleSubmit,\n            isSubmitting = _ref3.isSubmitting;\n        return React.createElement(SignUpContainer, {\n          id: \"signup-component\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Create an account:\"), React.createElement(SignUpForm, {\n          onSubmit: handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(FormItem, {\n          type: \"email\",\n          name: \"email\",\n          handleChange: handleChange,\n          value: values.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(FormItem, {\n          type: \"text\",\n          name: \"name\",\n          handleChange: handleChange,\n          value: values.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(FormItem, {\n          type: \"text\",\n          name: \"daily_calorie_goal\",\n          displayName: \"daily calorie goal\",\n          handleChange: handleChange,\n          value: String(values.daily_calorie_goal),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(FormItem, {\n          type: \"password\",\n          name: \"password\",\n          handleChange: handleChange,\n          value: values.password,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(InlineError, {\n          err: _this2.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(Button, {\n          inverse: true,\n          value: \"Submit\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(Button, {\n          inverse: true,\n          value: \"Cancel\",\n          onClick: _this2.props.toggleSignUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/SignUp.jsx"],"names":["React","Component","styled","lightGreen","Formik","signUpUser","FormItem","Button","InlineError","SignUpContainer","div","SignUpForm","form","SignUp","userCreatedForm","state","createdUser","email","props","toggleSignUp","setCreatedUser","user","setState","errors","password","name","daily_calorie_goal","values","test","setSubmitting","setTimeout","error","message","touched","handleChange","handleSubmit","isSubmitting","String"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {lightGreen} from 'variables';\nimport {Formik} from 'formik';\nimport {signUpUser} from 'Api';\nimport FormItem from 'components/FormItem';\nimport Button from 'components/Button';\nimport InlineError from 'components/InlineError';\n\nconst SignUpContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    background-color: ${lightGreen};\n    align-items: center;\n    margin: 40px 80px 40px 80px;\n    padding: 20px 0 20px 0;\n`;\n\nconst SignUpForm = styled.form`\n    margin: 5px;\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    align-items: center;\n`\n\n\nclass SignUp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            createdUser: null,\n            errors: null\n        }\n    }\n\n    userCreatedForm = () => <div>\n            <h4>{`User ${this.state.createdUser.email} created successfully`}</h4>\n            <Button onClick={this.props.toggleSignUp} value='Start logging' />\n        </div>\n\n    setCreatedUser = user => this.setState({createdUser: user})\n\n    render(){\n        return this.state.createdUser ? this.userCreatedForm()\n                : <Formik\n                    initialValues={{ email: '', password: '', name: '', daily_calorie_goal: \"2000\" }}\n                    validate={values => {\n                        let errors = {};\n                        if (!values.email) {\n                          errors.email = 'Required';\n                        } else if (\n                          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                          errors.email = 'Invalid email address';\n                        }\n                        return errors;\n                      }}\n                    onSubmit={ async (values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            setSubmitting(false);\n                        }, 400);\n                        try {\n                            const user = await signUpUser(values);\n                            this.setCreatedUser(user);\n                            //set the user returned from the promise\n                        } catch (err) {\n                            this.setState({error: err.message});\n                        }\n                      \n                    }}>\n                    {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleSubmit,\n                        isSubmitting,\n                    }) => (<SignUpContainer id='signup-component'>\n                            <h2>Create an account:</h2>\n                                <SignUpForm onSubmit={handleSubmit}>\n                                    <FormItem\n                                            type=\"email\"\n                                            name=\"email\"\n                                            handleChange={handleChange}\n                                            value={values.email}\n                                        />\n                                    <FormItem\n                                            type=\"text\"\n                                            name=\"name\"\n                                            handleChange={handleChange}\n                                            value={values.name}\n                                        />\n                                    <FormItem\n                                            type=\"text\"\n                                            name=\"daily_calorie_goal\"\n                                            displayName=\"daily calorie goal\"\n                                            handleChange={handleChange}\n                                            value={String(values.daily_calorie_goal)}\n                                        />\n                                    <FormItem\n                                            type=\"password\"\n                                            name=\"password\"\n                                            handleChange={handleChange}\n                                            value={values.password}\n                                        />\n                                    <InlineError err={this.state.error} />\n                                    <Button inverse value='Submit' type=\"submit\" disabled={isSubmitting}/>\n                                    <Button inverse value='Cancel' onClick={this.props.toggleSignUp} />\n                                </SignUpForm>\n                    </SignUpContainer> )}\n                </Formik>\n    }\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}