{"ast":null,"code":"import { assoc } from 'ramda';\nexport var signUpUser = function signUpUser(user) {\n  try {\n    return fetch('http://localhost:3000/api/signup', {\n      method: 'POST',\n      mode: 'cors',\n      cache: \"no-cache\",\n      url: 'http://localhost:3000',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(assoc('roles', ['user'], user))\n    });\n  } catch (err) {\n    throw Error(err);\n  }\n};\nexport var logInUser = function logInUser(user) {\n  try {\n    return fetch('http://localhost:3000/api/login', {\n      method: 'POST',\n      mode: 'cors',\n      cache: \"no-cache\",\n      url: 'http://localhost:3000',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n  } catch (err) {\n    throw Error(err);\n  }\n};\nexport var loadUserMeals = function loadUserMeals(user) {\n  try {\n    return fetch('http://localhost:3000/api/meals', {\n      method: 'GET',\n      mode: 'cors',\n      cache: \"no-cache\",\n      url: 'http://localhost:3000',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": sessionStorage.getItem('jwt')\n      }\n    });\n  } catch (err) {\n    throw Error(err);\n  }\n};\nexport var saveNewMeal = function saveNewMeal(meal) {\n  try {\n    return fetch('http://localhost:3000/api/meals', {\n      method: 'POST',\n      mode: 'cors',\n      cache: \"no-cache\",\n      url: 'http://localhost:3000',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": sessionStorage.getItem('jwt')\n      },\n      body: JSON.stringify(meal)\n    });\n  } catch (err) {\n    throw Error(err);\n  }\n};\nexport var deleteMeal = function deleteMeal(mealId) {\n  try {\n    return fetch(\"http://localhost:3000/api/meals/\".concat(mealId), {\n      method: 'DELETE',\n      mode: 'cors',\n      cache: \"no-cache\",\n      url: 'http://localhost:3000',\n      headers: {\n        \"Authorization\": sessionStorage.getItem('jwt')\n      }\n    });\n  } catch (err) {\n    throw Error(err);\n  }\n};\nexport var updateUser = function updateUser(userId, user) {\n  try {\n    return fetch(\"http://localhost:3000/api/users/\".concat(userId), {\n      method: 'PATCH',\n      mode: 'cors',\n      cache: \"no-cache\",\n      url: 'http://localhost:3000',\n      headers: {\n        \"Authorization\": sessionStorage.getItem('jwt')\n      },\n      body: JSON.stringify(user)\n    });\n  } catch (err) {\n    throw Error(err);\n  }\n};","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/Api.js"],"names":["assoc","signUpUser","user","fetch","method","mode","cache","url","headers","body","JSON","stringify","err","Error","logInUser","loadUserMeals","sessionStorage","getItem","saveNewMeal","meal","deleteMeal","mealId","updateUser","userId"],"mappings":"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","sourcesContent":["import {assoc} from 'ramda';\n\nexport const signUpUser = user => {\n    try {\n        return fetch('http://localhost:3000/api/signup', {\n            method:'POST',\n            mode: 'cors',\n            cache: \"no-cache\",\n            url: 'http://localhost:3000',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(assoc('roles', ['user'], user))\n        })\n    } catch(err) {\n        throw Error(err);\n    }\n}\n\nexport const logInUser = user => {\n    try {\n        return fetch('http://localhost:3000/api/login', {\n            method:'POST',\n            mode: 'cors',\n            cache: \"no-cache\",\n            url: 'http://localhost:3000',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(user)\n        })\n    } catch(err) {\n        throw Error(err);\n    }\n}\n\n\nexport const loadUserMeals = user => {\n    try {\n        return fetch('http://localhost:3000/api/meals', {\n            method:'GET',\n            mode: 'cors',\n            cache: \"no-cache\",\n            url: 'http://localhost:3000',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": sessionStorage.getItem('jwt')\n            },\n        })\n    } catch(err) {\n        throw Error(err);\n    }\n}\n\nexport const saveNewMeal = meal => {\n    try {\n        return fetch('http://localhost:3000/api/meals', {\n            method:'POST',\n            mode: 'cors',\n            cache: \"no-cache\",\n            url: 'http://localhost:3000',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": sessionStorage.getItem('jwt')\n            },\n            body: JSON.stringify(meal)\n        })\n    } catch(err) {\n        throw Error(err);\n    }\n}\n\n    export const deleteMeal = mealId => {\n        try {\n            return fetch(`http://localhost:3000/api/meals/${mealId}`, {\n                method:'DELETE',\n                mode: 'cors',\n                cache: \"no-cache\",\n                url: 'http://localhost:3000',\n                headers: {\n                    \"Authorization\": sessionStorage.getItem('jwt')\n                },\n            })\n        } catch(err) {\n            throw Error(err);\n        }\n    }\n\n        export const updateUser = (userId, user) => {\n            try {\n                return fetch(`http://localhost:3000/api/users/${userId}`, {\n                    method:'PATCH',\n                    mode: 'cors',\n                    cache: \"no-cache\",\n                    url: 'http://localhost:3000',\n                    headers: {\n                        \"Authorization\": sessionStorage.getItem('jwt')\n                    },\n                    body: JSON.stringify(user)\n                })\n            } catch(err) {\n                throw Error(err);\n            }\n}"]},"metadata":{},"sourceType":"module"}