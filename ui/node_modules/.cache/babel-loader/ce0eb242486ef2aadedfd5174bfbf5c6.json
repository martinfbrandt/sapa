{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    border:none;\\n    height:30px;\\n    font-size: 14px;\\n    margin: 5px;\\n    padding:5px;\\n    text-align: center;\\n    background-color: \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 60px;\\n  display:flex;\\n  flex-direction:row;\\n  margin: 30px;\\n  align-items: center;\\n  justify-content: center\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: calc(100vh - \", \" - 70px) ;\\n  margin: 30px 30px 0 30px;\\n  padding: 20px;\\n  overflow: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport { lightGreen } from 'variables';\nimport { loadUserMeals, deleteMeal, loadUser, saveNewMeal, updateMeal, updateUser } from 'Api';\nimport { append, prepend, without, equals, isEmpty, contains, filter, complement, concat, set, lensPath, keys, propEq, groupBy, prop } from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\nimport { headerHeight, inputGreen } from 'variables';\nvar Body = styled.div(_templateObject(), lightGreen, headerHeight);\nvar ControlPanel = styled.div(_templateObject2(), lightGreen);\nvar StyledInput = styled.input(_templateObject3(), inputGreen);\nvar initialFilterState = {\n  startTime: '00:00:00',\n  endTime: '23:59:59',\n  startDate: '1900-01-01',\n  endDate: '2090-01-01'\n};\nvar isNotEmpty = complement(isEmpty);\nvar dateConstant = 'YYYY-MM-DD HH:mm:ss';\n\nvar convertStringToMoment = function convertStringToMoment(date) {\n  return moment(date, dateConstant).utc();\n};\n\nvar initialState = {\n  meals: [],\n  editingItems: [],\n  filter: initialFilterState,\n  user: {}\n};\n\nvar CalorieLogger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalorieLogger, _Component);\n\n  function CalorieLogger() {\n    var _this;\n\n    _classCallCheck(this, CalorieLogger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalorieLogger).call(this));\n\n    _this.setFilter = function (filters) {\n      _this.setState(function (prevState) {\n        return set(lensPath(['filter']), filters, prevState);\n      });\n    };\n\n    _this.clearFilter = function (cb) {\n      _this.setFilter(initialFilterState);\n\n      cb();\n    };\n\n    _this.filterMeals = function (meals) {\n      var filter = _this.state.filter;\n      var startDateTimeString = concat(concat(filter.startDate, ' '), filter.startTime);\n      var endDateTimeString = concat(concat(filter.endDate, ' '), filter.endTime);\n      var startDateTime = convertStringToMoment(startDateTimeString);\n      var endDateTime = convertStringToMoment(endDateTimeString);\n\n      var isInRange = function isInRange(dateTimeMoment) {\n        return startDateTime.isBefore(dateTimeMoment) && endDateTime.isAfter(dateTimeMoment);\n      };\n\n      return meals.filter(function (meal) {\n        return isInRange(convertStringToMoment(prop('created_dt', meal)));\n      });\n    };\n\n    _this.toggleEditing = function (id) {\n      contains(id, _this.state.editingItems) ? _this.setState(function (prevState) {\n        return {\n          editingItems: without(id, prevState.editingItems)\n        };\n      }) : _this.setState(function (prevState) {\n        return {\n          editingItems: prepend(id, prevState.editingItems)\n        };\n      });\n    };\n\n    _this.loadInitialState =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(cachedUser) {\n        var loadedUser, meals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return loadUser(cachedUser.id);\n\n              case 3:\n                loadedUser = _context.sent;\n                _context.next = 6;\n                return loadUserMeals();\n\n              case 6:\n                meals = _context.sent;\n\n                _this.setState({\n                  user: loadedUser,\n                  meals: meals\n                });\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (_context.t0.message === 'Expired Token') {\n                  _this.setState({\n                    user: {}\n                  });\n                }\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getMeals =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var meals;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return loadUserMeals();\n\n            case 2:\n              meals = _context2.sent;\n\n              _this.setState({\n                meals: meals\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.logout = function () {\n      sessionStorage.clear();\n\n      _this.setState(initialState);\n    };\n\n    _this.saveMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(meal) {\n        var newMeal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return saveNewMeal(meal);\n\n              case 2:\n                newMeal = _context3.sent;\n\n                _this.setState(function (prevState) {\n                  return {\n                    meals: append(newMeal, prevState.meals.filter(complement(propEq)('id', 0)))\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.updateMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(mealId, meal) {\n        var updatedMeal;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return updateMeal(mealId, meal);\n\n              case 2:\n                updatedMeal = _context4.sent;\n\n                _this.setState(function (prevState) {\n                  return {\n                    meals: append(updatedMeal, prevState.meals.filter(complement(propEq)('id', mealId)))\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(meal) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!meal.id) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return deleteMeal(meal.id);\n\n              case 3:\n                //remove meal from state\n                _this.setState(function (prevState) {\n                  return {\n                    meals: filter(complement(propEq)('id', meal.id), prevState.meals)\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.setLoggedIn = function (user) {\n      return _this.setState({\n        user: user\n      });\n    };\n\n    _this.addNewMeal = function () {\n      _this.setState(function (prevState) {\n        return {\n          meals: append({\n            \"id\": 0,\n            \"created_dt\": moment().utc().format(dateConstant)\n          }, prevState.meals)\n        };\n      });\n\n      _this.toggleEditing(\"item-0\");\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(CalorieLogger, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var cachedUser = JSON.parse(sessionStorage.getItem('user'));\n\n      if (cachedUser) {\n        this.setState({\n          user: cachedUser\n        });\n        this.loadInitialState(cachedUser);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (isNotEmpty(this.state.user) && !equals(prevState.user, this.state.user)) {\n        console.log(prevState.user, this.state.user); //load the meals\n\n        this.getMeals();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          meals = _this$state.meals,\n          editingItems = _this$state.editingItems,\n          filter = _this$state.filter,\n          user = _this$state.user;\n\n      var getDay = function getDay(date) {\n        return moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD');\n      };\n\n      var dayGroups = groupBy(function (meal) {\n        return getDay(prop('created_dt', meal));\n      })(this.filterMeals(meals));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Header, {\n        logout: this.logout,\n        toggleSignUp: this.props.toggleSignUp,\n        setUserLoggedIn: this.setLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"User Meals:\"), React.createElement(ControlPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Daily Calorie Intake: \"), React.createElement(StyledInput, {\n        value: user.daily_calorie_count,\n        onChange: function onChange(_ref6) {\n          var target = _ref6.target;\n          return _this2.setState(function (prevState) {\n            return {\n              user: set(lensPath(['daily_calorie_count']), target.value, prevState.user)\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Button, {\n        inverse: true,\n        value: \"Set Calories\",\n        onClick:\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee6() {\n          var updatedUser;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return updateUser(user.id, {\n                    daily_calorie_count: parseInt(_this2.state.user.daily_calorie_count)\n                  });\n\n                case 2:\n                  updatedUser = _context6.sent;\n\n                  _this2.setState({\n                    user: updatedUser\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(Button, {\n        inverse: true,\n        value: \"add meal\",\n        onClick: this.addNewMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(Filter, {\n        clearFilter: this.clearFilter,\n        filter: filter,\n        setFilter: this.setFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, keys(dayGroups).map(function (date, idx) {\n        return React.createElement(TableItemGroup, {\n          key: \"group-\".concat(idx),\n          calorieMax: user.daily_calorie_count,\n          day: date,\n          meals: dayGroups[date],\n          toggleEditing: _this2.toggleEditing,\n          editingItems: editingItems,\n          idx: idx,\n          saveMeal: _this2.saveMeal,\n          updateMeal: _this2.updateMeal,\n          deleteMeal: _this2.deleteMeal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return CalorieLogger;\n}(Component);\n\nexport default CalorieLogger;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx"],"names":["React","Component","Header","Table","styled","lightGreen","loadUserMeals","deleteMeal","loadUser","saveNewMeal","updateMeal","updateUser","append","prepend","without","equals","isEmpty","contains","filter","complement","concat","set","lensPath","keys","propEq","groupBy","prop","Button","TableItemGroup","moment","Filter","headerHeight","inputGreen","Body","div","ControlPanel","StyledInput","input","initialFilterState","startTime","endTime","startDate","endDate","isNotEmpty","dateConstant","convertStringToMoment","date","utc","initialState","meals","editingItems","user","CalorieLogger","setFilter","filters","setState","prevState","clearFilter","cb","filterMeals","state","startDateTimeString","endDateTimeString","startDateTime","endDateTime","isInRange","dateTimeMoment","isBefore","isAfter","meal","toggleEditing","id","loadInitialState","cachedUser","loadedUser","message","getMeals","logout","sessionStorage","clear","saveMeal","newMeal","mealId","updatedMeal","setLoggedIn","addNewMeal","format","JSON","parse","getItem","prevProps","console","log","getDay","dayGroups","props","toggleSignUp","daily_calorie_count","target","value","parseInt","updatedUser","map","idx"],"mappings":"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","sourcesContent":["import React, {Component,} from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport {lightGreen} from 'variables';\nimport {loadUserMeals, deleteMeal, loadUser, saveNewMeal, updateMeal, updateUser} from 'Api';\nimport {append, prepend, without, equals, isEmpty, contains, filter, complement, concat, set, lensPath, keys, propEq, groupBy, prop} from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\nimport {headerHeight, inputGreen} from 'variables';\n\nconst Body = styled.div`\n  background-color: ${lightGreen};\n  height: calc(100vh - ${headerHeight} - 70px) ;\n  margin: 30px 30px 0 30px;\n  padding: 20px;\n  overflow: auto;\n`;\n\nconst ControlPanel = styled.div`\n  background-color: ${lightGreen};\n  height: 60px;\n  display:flex;\n  flex-direction:row;\n  margin: 30px;\n  align-items: center;\n  justify-content: center\n`;\n\nconst StyledInput = styled.input`\n    border:none;\n    height:30px;\n    font-size: 14px;\n    margin: 5px;\n    padding:5px;\n    text-align: center;\n    background-color: ${inputGreen}\n`\n\nconst initialFilterState = {\n    startTime: '00:00:00',\n    endTime: '23:59:59',\n    startDate: '1900-01-01',\n    endDate: '2090-01-01'\n}\n\nconst isNotEmpty = complement(isEmpty)\n\nconst dateConstant = 'YYYY-MM-DD HH:mm:ss'\n\nconst convertStringToMoment = date => moment(date, dateConstant).utc()\n\nconst initialState = {\n    meals:[],\n    editingItems: [],\n    filter: initialFilterState,\n    user: {},\n};\n\nclass CalorieLogger extends Component {\n    constructor() {\n        super();\n        this.state = initialState;\n    }\n\n    componentDidMount(){\n        const cachedUser = JSON.parse(sessionStorage.getItem('user'));\n        if(cachedUser){\n            this.setState({user: cachedUser})\n            this.loadInitialState(cachedUser);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(isNotEmpty(this.state.user) && !equals(prevState.user, this.state.user)){\n            console.log(prevState.user, this.state.user)\n            //load the meals\n            this.getMeals();\n            \n        }\n    }\n\n    setFilter = filters => {\n        this.setState(prevState => set(lensPath(['filter']), filters, prevState))\n    }\n\n    clearFilter = cb => {\n        this.setFilter(initialFilterState)\n        cb();\n    }\n\n    filterMeals = meals => {\n        const {filter} = this.state;\n        const startDateTimeString = concat(concat(filter.startDate,' '), filter.startTime);\n        const endDateTimeString = concat(concat(filter.endDate,' '), filter.endTime);\n\n        const startDateTime = convertStringToMoment(startDateTimeString);\n        const endDateTime = convertStringToMoment(endDateTimeString);\n        \n        const isInRange = dateTimeMoment => startDateTime.isBefore(dateTimeMoment) && endDateTime.isAfter(dateTimeMoment)\n        \n        return meals.filter(meal => isInRange(convertStringToMoment(prop('created_dt', meal))));\n\n    }\n\n    toggleEditing = id => {\n        contains(id, this.state.editingItems) ? \n        this.setState(prevState => ({editingItems: without(id, prevState.editingItems)})) :\n        this.setState(prevState => ({editingItems: prepend(id, prevState.editingItems)}))\n    }\n\n    loadInitialState = async cachedUser => {\n        try {\n            const loadedUser = await loadUser(cachedUser.id);\n            const meals = await loadUserMeals();\n\n            this.setState({user: loadedUser, meals: meals});\n        } catch (err){\n            if(err.message === 'Expired Token'){\n                this.setState({user: {}})\n            }\n        }\n    }\n\n    getMeals = async () => {\n        const meals = await loadUserMeals();\n        this.setState({meals: meals});\n    }\n\n    logout = () => {\n        sessionStorage.clear();\n        this.setState(initialState)\n    }\n\n    saveMeal = async meal => {\n        const newMeal = await saveNewMeal(meal);\n        this.setState(prevState => ({\n                meals: append(newMeal, prevState.meals.filter(complement(propEq)('id', 0)))\n            })\n        )\n    }\n\n    updateMeal = async (mealId, meal) => {\n        const updatedMeal = await updateMeal(mealId, meal);\n        this.setState(prevState => ({\n            meals: append(updatedMeal, prevState.meals.filter(complement(propEq)('id', mealId)))\n        }))\n    }\n\n    deleteMeal = async meal => {\n        \n        if(meal.id) {\n            await deleteMeal(meal.id)\n        }\n        //remove meal from state\n        this.setState(prevState => ({meals: filter(complement(propEq)('id', meal.id), prevState.meals)}));\n    }\n\n    setLoggedIn = user => this.setState({user:user});\n\n    addNewMeal= () => {\n        this.setState(prevState => ({meals: append({\"id\":0, \"created_dt\": moment().utc().format(dateConstant)}, prevState.meals)}));\n        this.toggleEditing(\"item-0\");\n    }\n\n\n    render(){\n        const {meals, editingItems, filter, user} = this.state;\n\n        const getDay = date => moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')\n\n        const dayGroups = groupBy(meal => getDay(prop('created_dt', meal)))(this.filterMeals(meals));\n        \n        return <div>\n                    <Header logout={this.logout} toggleSignUp={this.props.toggleSignUp} setUserLoggedIn={this.setLoggedIn}/>\n                    <Body>\n                        <h3>User Meals:</h3>\n                        <ControlPanel>\n                            <label>Daily Calorie Intake: </label>\n                            <StyledInput \n                                value={user.daily_calorie_count} \n                                onChange={({target}) => \n                                    this.setState(prevState => ({user: set(lensPath(['daily_calorie_count']), target.value, prevState.user)}))\n                                }\n                            />\n                            <Button inverse value='Set Calories' onClick={async () => {\n                                        const updatedUser = await updateUser(user.id, {daily_calorie_count: parseInt(this.state.user.daily_calorie_count)});\n                                        this.setState({user: updatedUser});\n                                    }\n                                }/>\n                            <Button inverse value='add meal' onClick={this.addNewMeal}/>\n                        </ControlPanel>\n\n                        <Filter clearFilter={this.clearFilter} filter={filter} setFilter={this.setFilter}/>\n                        <Table >{keys(dayGroups).map((date, idx) => \n                            <TableItemGroup \n                                key={`group-${idx}`}\n                                calorieMax={user.daily_calorie_count}\n                                day={date}\n                                meals={dayGroups[date]}\n                                toggleEditing={this.toggleEditing}\n                                editingItems={editingItems} \n                                idx={idx}\n                                saveMeal={this.saveMeal}\n                                updateMeal={this.updateMeal}\n                                deleteMeal={this.deleteMeal}\n                            />\n                        )}</Table>\n        \n                    </Body>\n               \n               </div>\n    }\n}\n\n\nexport default CalorieLogger;\n"]},"metadata":{},"sourceType":"module"}