{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    border:none;\\n    height:30px;\\n    font-size: 14px;\\n    margin: 5px;\\n    padding:5px;\\n    text-align: center;\\n    background-color: \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 60px;\\n  display:flex;\\n  flex-direction:row;\\n  margin: 30px;\\n  align-items: center;\\n  justify-content: center\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: calc(100vh - \", \" - 70px) ;\\n  margin: 30px 30px 0 30px;\\n  padding: 20px;\\n  overflow: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport { lightGreen } from 'variables';\nimport { loadUserMeals, deleteMeal, loadUser, saveNewMeal, updateMeal, updateUser } from 'Api';\nimport { append, prepend, without, sort, equals, isEmpty, contains, assoc, filter, complement, concat, set, lensPath, keys, propEq, groupBy, prop } from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\nimport { headerHeight, inputGreen } from 'variables';\nvar Body = styled.div(_templateObject(), lightGreen, headerHeight);\nvar ControlPanel = styled.div(_templateObject2(), lightGreen);\nvar StyledInput = styled.input(_templateObject3(), inputGreen);\nvar initialFilterState = {\n  startTime: '00:00:00',\n  endTime: '23:59:59',\n  startDate: '1900-01-01',\n  endDate: '2090-01-01'\n};\nvar isNotEmpty = complement(isEmpty);\nvar dateConstant = 'YYYY-MM-DD HH:mm:ss';\n\nvar convertStringToMoment = function convertStringToMoment(date) {\n  return moment(date, dateConstant).utc();\n};\n\nvar getMealMoment = function getMealMoment(meal) {\n  return convertStringToMoment(prop('created_dt', meal));\n};\n\nvar getDay = function getDay(date) {\n  return moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD');\n};\n\nvar initialState = {\n  meals: [],\n  editingItems: [],\n  filter: initialFilterState,\n  user: {}\n};\n\nvar CalorieLogger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalorieLogger, _Component);\n\n  function CalorieLogger() {\n    var _this;\n\n    _classCallCheck(this, CalorieLogger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalorieLogger).call(this));\n\n    _this.setFilter = function (filters) {\n      _this.setState(function (prevState) {\n        return set(lensPath(['filter']), filters, prevState);\n      });\n    };\n\n    _this.clearFilter = function (cb) {\n      _this.setFilter(initialFilterState);\n\n      cb();\n    };\n\n    _this.filterMeals = function (meals) {\n      var filter = _this.state.filter;\n      var startDateTimeString = concat(concat(filter.startDate, ' '), filter.startTime);\n      var endDateTimeString = concat(concat(filter.endDate, ' '), filter.endTime); // extracts the start and end date/time of the filter and creates a moment for each\n\n      var startDateTime = convertStringToMoment(startDateTimeString);\n      var endDateTime = convertStringToMoment(endDateTimeString); // checks to see if the meal should show based on the filter\n\n      var isInRange = function isInRange(dateTimeMoment) {\n        return startDateTime.isBefore(dateTimeMoment) && endDateTime.isAfter(dateTimeMoment);\n      }; // sort function uses moment's natural sortability\n\n\n      var momentComparator = function momentComparator(mealA, mealB) {\n        return getMealMoment(mealB) - getMealMoment(mealA);\n      }; // sort by most recent first\n\n\n      var sortMeals = function sortMeals(meals) {\n        return sort(momentComparator, meals);\n      };\n\n      return sortMeals(meals).filter(function (meal) {\n        return isInRange(getMealMoment(meal));\n      });\n    };\n\n    _this.toggleEditing = function (id) {\n      contains(id, _this.state.editingItems) ? _this.setState(function (prevState) {\n        return {\n          editingItems: without(id, prevState.editingItems)\n        };\n      }) : _this.setState(function (prevState) {\n        return {\n          editingItems: prepend(id, prevState.editingItems)\n        };\n      });\n    };\n\n    _this.loadInitialState =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(cachedUser) {\n        var loadedUser, meals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return loadUser(cachedUser.id);\n\n              case 2:\n                loadedUser = _context.sent;\n                _context.next = 5;\n                return loadUserMeals(function () {\n                  if (err.message === 'Expired Token') {\n                    _this.setState({\n                      user: {}\n                    });\n                  }\n                });\n\n              case 5:\n                meals = _context.sent;\n\n                _this.setState({\n                  user: loadedUser,\n                  meals: meals\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getMeals =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var meals;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return loadUserMeals();\n\n            case 2:\n              meals = _context2.sent;\n\n              _this.setState({\n                meals: meals\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.logout = function () {\n      sessionStorage.clear();\n\n      _this.setState(initialState);\n    };\n\n    _this.saveMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(meal) {\n        var newMeal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return saveNewMeal(meal);\n\n              case 3:\n                newMeal = _context3.sent;\n\n                _this.addNewMealToState(newMeal);\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                _this.addNewMealToState(assoc('error', _context3.t0.message, meal));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.updateMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(mealId, meal) {\n        var updatedMeal;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return updateMeal(mealId, meal);\n\n              case 3:\n                updatedMeal = _context4.sent;\n\n                _this.replaceExistingMealInState(updatedMeal);\n\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                _this.replaceExistingMealInState(assoc('error', _context4.t0.message, meal));\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.addNewMealToState = function (newMeal) {\n      return _this.setState(function (prevState) {\n        return {\n          meals: append(newMeal, prevState.meals.filter(complement(propEq)('id', 0)))\n        };\n      });\n    };\n\n    _this.replaceExistingMealInState = function (existingMeal) {\n      return _this.setState(function (prevState) {\n        return {\n          meals: append(existingMeal, prevState.meals.filter(complement(propEq)('id', existingMeal.id)))\n        };\n      });\n    };\n\n    _this.deleteMeal =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(meal) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!meal.id) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return deleteMeal(meal.id);\n\n              case 3:\n                //remove meal from state\n                _this.setState(function (prevState) {\n                  return {\n                    meals: filter(complement(propEq)('id', meal.id), prevState.meals)\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.setLoggedIn = function (user) {\n      return _this.setState({\n        user: user\n      });\n    };\n\n    _this.addNewMeal = function () {\n      _this.setState(function (prevState) {\n        return {\n          meals: append({\n            \"id\": 0,\n            \"created_dt\": moment().utc().format(dateConstant)\n          }, prevState.meals.filter(complement(propEq)('id', 0)))\n        };\n      });\n\n      _this.toggleEditing(\"item-0\");\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(CalorieLogger, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var cachedUser = JSON.parse(sessionStorage.getItem('user'));\n\n      if (cachedUser) {\n        this.setState({\n          user: cachedUser\n        });\n        this.loadInitialState(cachedUser);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (isNotEmpty(this.state.user) && !equals(prevState.user, this.state.user)) {\n        console.log(prevState.user, this.state.user); //load the meals\n\n        this.getMeals();\n      }\n    } // sets the state of the item filter\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          meals = _this$state.meals,\n          editingItems = _this$state.editingItems,\n          filter = _this$state.filter,\n          user = _this$state.user; // determines the groups of meals per day\n\n      var dayGroups = groupBy(function (meal) {\n        return getDay(prop('created_dt', meal));\n      })(this.filterMeals(meals));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Header, {\n        logout: this.logout,\n        toggleSignUp: this.props.toggleSignUp,\n        setUserLoggedIn: this.setLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"User Meals:\"), React.createElement(ControlPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Daily Calorie Intake: \"), React.createElement(StyledInput, {\n        value: user.daily_calorie_count,\n        onChange: function onChange(_ref6) {\n          var target = _ref6.target;\n          return _this2.setState(function (prevState) {\n            return {\n              user: set(lensPath(['daily_calorie_count']), target.value, prevState.user)\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(Button, {\n        inverse: true,\n        value: \"Set Calories\",\n        onClick:\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee6() {\n          var updatedUser;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return updateUser(user.id, {\n                    daily_calorie_count: parseInt(_this2.state.user.daily_calorie_count)\n                  });\n\n                case 2:\n                  updatedUser = _context6.sent;\n\n                  _this2.setState({\n                    user: updatedUser\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"add-meal-button\",\n        inverse: true,\n        value: \"add meal\",\n        onClick: this.addNewMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(Filter, {\n        clearFilter: this.clearFilter,\n        filter: filter,\n        setFilter: this.setFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, keys(dayGroups).map(function (date, idx) {\n        return React.createElement(TableItemGroup, {\n          key: \"group-\".concat(idx),\n          calorieMax: user.daily_calorie_count,\n          day: date,\n          meals: dayGroups[date],\n          toggleEditing: _this2.toggleEditing,\n          editingItems: editingItems,\n          idx: idx,\n          saveMeal: _this2.saveMeal,\n          updateMeal: _this2.updateMeal,\n          deleteMeal: _this2.deleteMeal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return CalorieLogger;\n}(Component);\n\nexport default CalorieLogger;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/pages/CalorieLogger.jsx"],"names":["React","Component","Header","Table","styled","lightGreen","loadUserMeals","deleteMeal","loadUser","saveNewMeal","updateMeal","updateUser","append","prepend","without","sort","equals","isEmpty","contains","assoc","filter","complement","concat","set","lensPath","keys","propEq","groupBy","prop","Button","TableItemGroup","moment","Filter","headerHeight","inputGreen","Body","div","ControlPanel","StyledInput","input","initialFilterState","startTime","endTime","startDate","endDate","isNotEmpty","dateConstant","convertStringToMoment","date","utc","getMealMoment","meal","getDay","format","initialState","meals","editingItems","user","CalorieLogger","setFilter","filters","setState","prevState","clearFilter","cb","filterMeals","state","startDateTimeString","endDateTimeString","startDateTime","endDateTime","isInRange","dateTimeMoment","isBefore","isAfter","momentComparator","mealA","mealB","sortMeals","toggleEditing","id","loadInitialState","cachedUser","loadedUser","err","message","getMeals","logout","sessionStorage","clear","saveMeal","newMeal","addNewMealToState","mealId","updatedMeal","replaceExistingMealInState","existingMeal","setLoggedIn","addNewMeal","JSON","parse","getItem","prevProps","console","log","dayGroups","props","toggleSignUp","daily_calorie_count","target","value","parseInt","updatedUser","map","idx"],"mappings":"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","sourcesContent":["import React, {Component,} from 'react';\nimport Header from 'components/Header';\nimport Table from 'components/Table';\nimport styled from 'styled-components';\nimport {lightGreen} from 'variables';\nimport {\n    loadUserMeals, \n    deleteMeal, \n    loadUser, \n    saveNewMeal, \n    updateMeal, \n    updateUser\n} from 'Api';\nimport {append, prepend, without, sort, equals, isEmpty, contains, assoc, filter, complement, concat, set, lensPath, keys, propEq, groupBy, prop} from 'ramda';\nimport Button from 'components/Button';\nimport TableItemGroup from 'components/TableItemGroup';\nimport moment from 'moment';\nimport Filter from 'components/Filter';\nimport {headerHeight, inputGreen} from 'variables';\n\nconst Body = styled.div`\n  background-color: ${lightGreen};\n  height: calc(100vh - ${headerHeight} - 70px) ;\n  margin: 30px 30px 0 30px;\n  padding: 20px;\n  overflow: auto;\n`;\n\nconst ControlPanel = styled.div`\n  background-color: ${lightGreen};\n  height: 60px;\n  display:flex;\n  flex-direction:row;\n  margin: 30px;\n  align-items: center;\n  justify-content: center\n`;\n\nconst StyledInput = styled.input`\n    border:none;\n    height:30px;\n    font-size: 14px;\n    margin: 5px;\n    padding:5px;\n    text-align: center;\n    background-color: ${inputGreen}\n`\n\nconst initialFilterState = {\n    startTime: '00:00:00',\n    endTime: '23:59:59',\n    startDate: '1900-01-01',\n    endDate: '2090-01-01'\n}\n\nconst isNotEmpty = complement(isEmpty)\n\nconst dateConstant = 'YYYY-MM-DD HH:mm:ss'\n\nconst convertStringToMoment = date => moment(date, dateConstant).utc()\n\nconst getMealMoment = meal => convertStringToMoment(prop('created_dt', meal))\n\nconst getDay = date => moment(date, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')\n\nconst initialState = {\n    meals:[],\n    editingItems: [],\n    filter: initialFilterState,\n    user: {},\n};\n\nclass CalorieLogger extends Component {\n    constructor() {\n        super();\n        this.state = initialState;\n    }\n\n    componentDidMount(){\n        const cachedUser = JSON.parse(sessionStorage.getItem('user'));\n        if(cachedUser){\n            this.setState({user: cachedUser})\n            this.loadInitialState(cachedUser);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(isNotEmpty(this.state.user) && !equals(prevState.user, this.state.user)){\n            console.log(prevState.user, this.state.user)\n            //load the meals\n            this.getMeals();\n            \n        }\n    }\n\n    // sets the state of the item filter\n    setFilter = filters => {\n        this.setState(prevState => set(lensPath(['filter']), filters, prevState))\n    }\n\n    // resets the state of the item filter\n    clearFilter = cb => {\n        this.setFilter(initialFilterState)\n        cb();\n    }\n\n    // executes on click of the \"filter\" button, filters the meals in state that are sent down the tree\n    filterMeals = meals => {\n        const {filter} = this.state;\n        const startDateTimeString = concat(concat(filter.startDate,' '), filter.startTime);\n        const endDateTimeString = concat(concat(filter.endDate,' '), filter.endTime);\n\n        // extracts the start and end date/time of the filter and creates a moment for each\n        const startDateTime = convertStringToMoment(startDateTimeString);\n        const endDateTime = convertStringToMoment(endDateTimeString);\n        \n        // checks to see if the meal should show based on the filter\n        const isInRange = dateTimeMoment => startDateTime.isBefore(dateTimeMoment) && endDateTime.isAfter(dateTimeMoment)\n        \n        // sort function uses moment's natural sortability\n        const momentComparator = (mealA, mealB) => getMealMoment(mealB) - getMealMoment(mealA);\n\n        // sort by most recent first\n        const sortMeals = meals => sort(momentComparator, meals)\n\n        return sortMeals(meals).filter(meal => isInRange(getMealMoment(meal)));\n\n    }  \n    // toggles the list item editing state based on its ID\n    toggleEditing = id => {\n        contains(id, this.state.editingItems) ? \n        this.setState(prevState => ({editingItems: without(id, prevState.editingItems)})) :\n        this.setState(prevState => ({editingItems: prepend(id, prevState.editingItems)}))\n    }\n\n    // sets up the initial state, called when component mounts\n    // loads newest version of cached user\n    loadInitialState = async cachedUser => {\n        \n    const loadedUser = await loadUser(cachedUser.id);\n    const meals = await loadUserMeals(() => {\n        if(err.message === 'Expired Token'){\n            this.setState({user: {}})\n        }\n    });\n\n    this.setState({user: loadedUser, meals: meals});\n    }\n\n    // retrieves the user's meals and sets the state\n    getMeals = async () => {\n        const meals = await loadUserMeals();\n        this.setState({meals: meals});\n    }\n\n    // clears the user from the session and resets state to an empty user\n    logout = () => {\n        sessionStorage.clear();\n        this.setState(initialState)\n    }\n\n    // saves a new user meal, and adds the new meal to the state\n    saveMeal = async meal => {\n        try {\n            const newMeal = await saveNewMeal(meal);\n            this.addNewMealToState(newMeal)\n        } catch(err){\n            this.addNewMealToState(assoc('error', err.message, meal))\n        }\n        \n    }\n\n    // updates a user meal and replaces meal with updated meal in state\n    updateMeal = async (mealId, meal) => {\n        try {\n            const updatedMeal = await updateMeal(mealId, meal);\n            this.replaceExistingMealInState(updatedMeal)\n        } catch(err){\n            this.replaceExistingMealInState(assoc('error', err.message, meal))\n        }\n    }\n    // util function to add a new meal, and remove new meal stub from state\n    addNewMealToState = newMeal => this.setState(prevState => ({\n        meals: append(newMeal, prevState.meals.filter(complement(propEq)('id', 0)))\n    }))\n\n    // util function to filter out existing meal and add the updated version to state\n    replaceExistingMealInState = existingMeal => this.setState(prevState => ({\n        meals: append(existingMeal, prevState.meals.filter(complement(propEq)('id', existingMeal.id)))\n    }))\n\n    // deletes the meal and removes it from the state\n    deleteMeal = async meal => {\n        if(meal.id) {\n            await deleteMeal(meal.id)\n        }\n        //remove meal from state\n        this.setState(prevState => ({meals: filter(complement(propEq)('id', meal.id), prevState.meals)}));\n    }\n\n    // sets the user in state on login\n    setLoggedIn = user => this.setState({user:user});\n\n    // adds a new meal stub to the state, only allows one meal to be added at a time\n    addNewMeal= () => {\n        this.setState(prevState => ({meals: append({\"id\":0, \"created_dt\": moment().utc().format(dateConstant)}, prevState.meals.filter(complement(propEq)('id', 0)))}));\n        this.toggleEditing(\"item-0\");\n    }\n\n\n    render(){\n        const {meals, editingItems, filter, user} = this.state;\n\n        // determines the groups of meals per day\n        const dayGroups = groupBy(meal => getDay(prop('created_dt', meal)))(this.filterMeals(meals));\n        \n        return <div>\n                    <Header logout={this.logout} toggleSignUp={this.props.toggleSignUp} setUserLoggedIn={this.setLoggedIn}/>\n                    <Body>\n                        <h3>User Meals:</h3>\n                        <ControlPanel>\n                            <label>Daily Calorie Intake: </label>\n                            <StyledInput \n                                value={user.daily_calorie_count} \n                                onChange={({target}) => \n                                    this.setState(prevState => ({user: set(lensPath(['daily_calorie_count']), target.value, prevState.user)}))\n                                }\n                            />\n                            <Button inverse value='Set Calories' onClick={async () => {\n                                        const updatedUser = await updateUser(user.id, {daily_calorie_count: parseInt(this.state.user.daily_calorie_count)});\n                                        this.setState({user: updatedUser});\n                                    }\n                                }/>\n                            <Button id='add-meal-button' inverse value='add meal' onClick={this.addNewMeal}/>\n                        </ControlPanel>\n\n                        <Filter clearFilter={this.clearFilter} filter={filter} setFilter={this.setFilter}/>\n                        <Table >{keys(dayGroups).map((date, idx) => \n                            <TableItemGroup \n                                key={`group-${idx}`}\n                                calorieMax={user.daily_calorie_count}\n                                day={date}\n                                meals={dayGroups[date]}\n                                toggleEditing={this.toggleEditing}\n                                editingItems={editingItems} \n                                idx={idx}\n                                saveMeal={this.saveMeal}\n                                updateMeal={this.updateMeal}\n                                deleteMeal={this.deleteMeal}\n                            />\n                        )}</Table>\n        \n                    </Body>\n               \n               </div>\n    }\n}\n\n\nexport default CalorieLogger;\n"]},"metadata":{},"sourceType":"module"}