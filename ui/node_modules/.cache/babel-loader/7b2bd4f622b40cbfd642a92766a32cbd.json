{"ast":null,"code":"import _classCallCheck from \"/Users/martinbrandt/sapa/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/sapa/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/sapa/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/sapa/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/sapa/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/sapa/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/sapa/ui/src/components/TableItem.jsx\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius:50%;\\n  width: 12px;\\n  height: 12px;\\n  border: 1px solid black\\n  margin-left:5px;\\n  opacity: .85\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  border-top:none;\\n  border-left:none;\\n  border-right:none;\\n  border-bottom: 2px solid \", \";\\n  font-weight: 500;\\n  margin-left: 3px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-left: 10px;\\n  display:flex;\\n  align-items: flex-start;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 50%;\\n  display:flex;\\n  flex-direction:column;\\n  margin: 5px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left:10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 80px;\\n  width: 90%;\\n  background-color: white;\\n  margin-top: 5px;\\n  margin-left: 5px;\\n  display:flex;\\n  align-items:center;\\n  cursor: default;\\n  border-radius: 15px;\\n  opacity:.9\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/Button\";\nimport { set, equals, lensPath } from \"ramda\";\nimport { lightGreen } from 'variables';\nimport moment from 'moment';\nimport InlineError from 'components/InlineError';\nvar Item = styled.div(_templateObject());\nvar ErrorContainer = styled.div(_templateObject2());\nvar PropertyContainer = styled.div(_templateObject3());\nvar PropertyItem = styled.div(_templateObject4());\nvar StyledInput = styled.input(_templateObject5(), lightGreen);\nvar StatusIndicator = styled.div(_templateObject6()); // Component displays the basic table item where the user adds descriptions and name\n\nvar TableItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableItem, _React$Component);\n\n  function TableItem(props) {\n    var _this;\n\n    _classCallCheck(this, TableItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableItem).call(this, props));\n\n    _this.updateState = function (value, key) {\n      _this.setState(function (prevState) {\n        return set(lensPath(['experience', key]), value, prevState);\n      });\n    };\n\n    _this.state = {\n      experience: props.experience || {}\n    };\n    return _this;\n  }\n\n  _createClass(TableItem, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!equals(prevProps.experience, this.props.experience)) {\n        this.setState({\n          experience: this.props.experience\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          toggleEditing = _this$props.toggleEditing,\n          saveExperience = _this$props.saveExperience,\n          updateExperience = _this$props.updateExperience,\n          _this$props$isEditing = _this$props.isEditing,\n          isEditing = _this$props$isEditing === void 0 ? false : _this$props$isEditing;\n      var experience = this.state.experience;\n      return React.createElement(Item, {\n        key: id,\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(StatusIndicator, {\n        id: \"\".concat(id, \"-status-indicator\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(PropertyContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Description:\"), isEditing ? React.createElement(StyledInput, {\n        id: \"\".concat(id, \"-description-input\"),\n        defaultValue: experience.description,\n        onChange: function onChange(_ref) {\n          var target = _ref.target;\n          return _this2.updateState(target.value, \"description\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }) : React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, experience.description)), React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Name:\"), isEditing ? React.createElement(StyledInput, {\n        id: \"\".concat(id, \"-name-input\"),\n        defaultValue: experience.name,\n        onChange: function onChange(_ref2) {\n          var target = _ref2.target;\n          return _this2.updateState(parseInt(target.value), \"name\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }) : React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, experience.name)), React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"\".concat(id, \"-date-created\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Date Created: \".concat(moment(experience.created_dt, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')))), React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"\".concat(id, \"-time-created\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Time Created: \".concat(moment(experience.created_dt, 'YYYY-MM-DD HH:mm:ss').format('HH:mm:ss'))))), React.createElement(Button, {\n        id: \"\".concat(id, \"-delete-button\"),\n        value: \"Delete\",\n        onClick: function onClick() {\n          return _this2.props.deleteExperience(experience);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), isEditing ? React.createElement(React.Fragment, null, React.createElement(Button, {\n        id: \"\".concat(id, \"-save-button\"),\n        value: \"Save\",\n        onClick: function onClick() {\n          experience.id ? updateExperience(experience.id, experience) : saveExperience(experience);\n          toggleEditing(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"\".concat(id, \"-cancel-button\"),\n        value: \"Cancel\",\n        onClick: function onClick() {\n          return toggleEditing(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })) : React.createElement(Button, {\n        id: \"\".concat(id, \"-edit-button\"),\n        value: \"Edit\",\n        onClick: function onClick() {\n          return toggleEditing(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(ErrorContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(InlineError, {\n        err: this.state.experience.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TableItem;\n}(React.Component);\n\nexport default TableItem;","map":{"version":3,"sources":["/Users/martinbrandt/sapa/ui/src/components/TableItem.jsx"],"names":["React","styled","Button","set","equals","lensPath","lightGreen","moment","InlineError","Item","div","ErrorContainer","PropertyContainer","PropertyItem","StyledInput","input","StatusIndicator","TableItem","props","updateState","value","key","setState","prevState","state","experience","prevProps","id","toggleEditing","saveExperience","updateExperience","isEditing","description","target","name","parseInt","created_dt","format","deleteExperience","error","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAqC,OAArC;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,IAAMC,IAAI,GAAGR,MAAM,CAACS,GAAV,mBAAV;AAaA,IAAMC,cAAc,GAAGV,MAAM,CAACS,GAAV,oBAApB;AAIA,IAAME,iBAAiB,GAAGX,MAAM,CAACS,GAAV,oBAAvB;AAMA,IAAMG,YAAY,GAAGZ,MAAM,CAACS,GAAV,oBAAlB;AAMA,IAAMI,WAAW,GAAGb,MAAM,CAACc,KAAV,qBAIYT,UAJZ,CAAjB;AASA,IAAMU,eAAe,GAAGf,MAAM,CAACS,GAAV,oBAArB,C,CASA;;IACMO,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAOnBC,WAPmB,GAOL,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5B,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAIpB,GAAG,CAACE,QAAQ,CAAC,CAAC,YAAD,EAAegB,GAAf,CAAD,CAAT,EAAgCD,KAAhC,EAAuCG,SAAvC,CAAP;AAAA,OAAvB;AACD,KATkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEP,KAAK,CAACO,UAAN,IAAoB;AADrB,KAAb;AAFiB;AAKlB;;;;uCAMkBC,S,EAAU;AAC3B,UAAG,CAACtB,MAAM,CAACsB,SAAS,CAACD,UAAX,EAAuB,KAAKP,KAAL,CAAWO,UAAlC,CAAV,EAAwD;AACtD,aAAKH,QAAL,CAAc;AAACG,UAAAA,UAAU,EAAE,KAAKP,KAAL,CAAWO;AAAxB,SAAd;AACD;AACF;;;6BAEQ;AAAA;;AAAA,wBAOH,KAAKP,KAPF;AAAA,UAELS,EAFK,eAELA,EAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,cAJK,eAILA,cAJK;AAAA,UAKLC,gBALK,eAKLA,gBALK;AAAA,8CAMLC,SANK;AAAA,UAMLA,SANK,sCAMO,KANP;AAAA,UAQCN,UARD,GAQgB,KAAKD,KARrB,CAQCC,UARD;AAUP,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEE,EAAX;AAAe,QAAA,EAAE,EAAEA,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,EAAE,YAAKA,EAAL,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGI,SAAS,GACR,oBAAC,WAAD;AACE,QAAA,EAAE,YAAKJ,EAAL,uBADJ;AAEE,QAAA,YAAY,EAAEF,UAAU,CAACO,WAF3B;AAGE,QAAA,QAAQ,EAAE;AAAA,cAAEC,MAAF,QAAEA,MAAF;AAAA,iBAAc,MAAI,CAACd,WAAL,CAAiBc,MAAM,CAACb,KAAxB,EAA+B,aAA/B,CAAd;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,GAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQK,UAAU,CAACO,WAAnB,CATJ,CADF,EAaE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGD,SAAS,GACR,oBAAC,WAAD;AACE,QAAA,EAAE,YAAKJ,EAAL,gBADJ;AAEE,QAAA,YAAY,EAAEF,UAAU,CAACS,IAF3B;AAGE,QAAA,QAAQ,EAAE;AAAA,cAAED,MAAF,SAAEA,MAAF;AAAA,iBAAc,MAAI,CAACd,WAAL,CAAiBgB,QAAQ,CAACF,MAAM,CAACb,KAAR,CAAzB,EAAyC,MAAzC,CAAd;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,GAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQK,UAAU,CAACS,IAAnB,CATJ,CAbF,EAyBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,YAAKP,EAAL,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAmDpB,MAAM,CAACkB,UAAU,CAACW,UAAZ,EAAwB,qBAAxB,CAAN,CAAqDC,MAArD,CAA4D,YAA5D,CAAnD,EADF,CAzBF,EA4BE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,YAAKV,EAAL,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAmDpB,MAAM,CAACkB,UAAU,CAACW,UAAZ,EAAwB,qBAAxB,CAAN,CAAqDC,MAArD,CAA4D,UAA5D,CAAnD,EADF,CA5BF,CAFF,EAkCE,oBAAC,MAAD;AAAQ,QAAA,EAAE,YAAKV,EAAL,mBAAV;AAAmC,QAAA,KAAK,EAAC,QAAzC;AAAkD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACT,KAAL,CAAWoB,gBAAX,CAA4Bb,UAA5B,CAAN;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCF,EAmCGM,SAAS,GACR,0CACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,YAAKJ,EAAL,iBAAV;AAAiC,QAAA,KAAK,EAAC,MAAvC;AAA8C,QAAA,OAAO,EAAE,mBAAM;AACrDF,UAAAA,UAAU,CAACE,EAAX,GAAgBG,gBAAgB,CAACL,UAAU,CAACE,EAAZ,EAAgBF,UAAhB,CAAhC,GAA8DI,cAAc,CAACJ,UAAD,CAA5E;AACAG,UAAAA,aAAa,CAACD,EAAD,CAAb;AACH,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,MAAD;AAAQ,QAAA,EAAE,YAAKA,EAAL,mBAAV;AAAmC,QAAA,KAAK,EAAC,QAAzC;AAAkD,QAAA,OAAO,EAAE;AAAA,iBAAMC,aAAa,CAACD,EAAD,CAAnB;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADQ,GASR,oBAAC,MAAD;AAAQ,QAAA,EAAE,YAAKA,EAAL,iBAAV;AAAiC,QAAA,KAAK,EAAC,MAAvC;AAA8C,QAAA,OAAO,EAAE;AAAA,iBAAMC,aAAa,CAACD,EAAD,CAAnB;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CJ,EA8CE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,UAAX,CAAsBc,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA9CF,CADF;AAoDD;;;;EAhFqBvC,KAAK,CAACwC,S;;AAmF9B,eAAevB,SAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/Button\";\nimport { set, equals, lensPath} from \"ramda\";\nimport {lightGreen} from 'variables';\nimport moment from 'moment';\nimport InlineError from 'components/InlineError';\n\nconst Item = styled.div`\n  height: 80px;\n  width: 90%;\n  background-color: white;\n  margin-top: 5px;\n  margin-left: 5px;\n  display:flex;\n  align-items:center;\n  cursor: default;\n  border-radius: 15px;\n  opacity:.9\n`;\n\nconst ErrorContainer = styled.div`\n  margin-left:10px;\n`\n\nconst PropertyContainer = styled.div`\n  width: 50%;\n  display:flex;\n  flex-direction:column;\n  margin: 5px;\n`\nconst PropertyItem = styled.div`\n  padding-left: 10px;\n  display:flex;\n  align-items: flex-start;\n`\n\nconst StyledInput = styled.input`\n  border-top:none;\n  border-left:none;\n  border-right:none;\n  border-bottom: 2px solid ${lightGreen};\n  font-weight: 500;\n  margin-left: 3px;\n`\n\nconst StatusIndicator = styled.div`\n  border-radius:50%;\n  width: 12px;\n  height: 12px;\n  border: 1px solid black\n  margin-left:5px;\n  opacity: .85\n`\n\n// Component displays the basic table item where the user adds descriptions and name\nclass TableItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      experience: props.experience || {}\n    };\n  }\n\n  updateState = (value, key) => {\n    this.setState(prevState => set(lensPath(['experience', key]), value, prevState));\n  };\n\n  componentDidUpdate(prevProps){\n    if(!equals(prevProps.experience, this.props.experience)){\n      this.setState({experience: this.props.experience})\n    }\n  }\n\n  render() {\n    const {\n      id,\n      toggleEditing,\n      saveExperience,\n      updateExperience,\n      isEditing = false,\n    } = this.props;\n    const { experience } = this.state;\n\n    return (\n      <Item key={id} id={id}>\n        <StatusIndicator id={`${id}-status-indicator`}/>\n        <PropertyContainer>\n          <PropertyItem>\n            <label>Description:</label>\n            {isEditing ? (\n              <StyledInput\n                id={`${id}-description-input`}\n                defaultValue={experience.description}\n                onChange={({target}) => this.updateState(target.value, \"description\")}\n              />\n            ) : (\n              <label>{experience.description}</label>\n            )}\n          </PropertyItem>\n          <PropertyItem>\n            <label>Name:</label>\n            {isEditing ? (\n              <StyledInput\n                id={`${id}-name-input`}\n                defaultValue={experience.name}\n                onChange={({target}) => this.updateState(parseInt(target.value), \"name\")}\n              />\n            ) : (\n              <label>{experience.name}</label>\n            )}\n          </PropertyItem>\n          <PropertyItem>\n            <label id={`${id}-date-created`}>{`Date Created: ${moment(experience.created_dt, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')}`}</label>\n          </PropertyItem>\n          <PropertyItem>\n            <label id={`${id}-time-created`}>{`Time Created: ${moment(experience.created_dt, 'YYYY-MM-DD HH:mm:ss').format('HH:mm:ss')}`}</label>\n          </PropertyItem>\n        </PropertyContainer>  \n        <Button id={`${id}-delete-button`} value=\"Delete\" onClick={() => this.props.deleteExperience(experience)} />\n        {isEditing ? (\n          <>\n            <Button id={`${id}-save-button`} value=\"Save\" onClick={() => {\n                    experience.id ? updateExperience(experience.id, experience) : saveExperience(experience);\n                    toggleEditing(id);\n                }} />\n            <Button id={`${id}-cancel-button`} value=\"Cancel\" onClick={() => toggleEditing(id)} />\n          </>\n        ) : (\n          <Button id={`${id}-edit-button`} value=\"Edit\" onClick={() => toggleEditing(id)} />\n        )}\n        <ErrorContainer>          \n          <InlineError err={this.state.experience.error}/>\n        </ErrorContainer>\n      </Item>\n    );\n  }\n}\n\nexport default TableItem;\n"]},"metadata":{},"sourceType":"module"}