{"ast":null,"code":"import _classCallCheck from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/martinbrandt/martin-brandt/calorie-counter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martinbrandt/martin-brandt/calorie-counter/src/components/TableItem.jsx\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius:50%;\\n  width: 12px;\\n  height: 12px;\\n  background-color: \", \";\\n  border: 1px solid black\\n  margin-left:5px;\\n  opacity: .85\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  border-top:none;\\n  border-left:none;\\n  border-right:none;\\n  border-bottom: 2px solid \", \";\\n  font-weight: 500;\\n  margin-left: 3px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-left: 10px;\\n  display:flex;\\n  align-items: flex-start;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 50%;\\n  display:flex;\\n  flex-direction:column;\\n  margin: 3px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left:10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 70px;\\n  width: 90%;\\n  background-color: white;\\n  margin-top: 5px;\\n  margin-left: 5px;\\n  display:flex;\\n  align-items:center;\\n  cursor: default;\\n  border-radius: 15px;\\n  opacity:.9\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/Button\";\nimport { set, equals, lensPath } from \"ramda\";\nimport { lightGreen } from 'variables';\nimport moment from 'moment';\nimport InlineError from 'components/InlineError';\nvar Item = styled.div(_templateObject());\nvar ErrorContainer = styled.div(_templateObject2());\nvar PropertyContainer = styled.div(_templateObject3());\nvar PropertyItem = styled.div(_templateObject4());\nvar StyledInput = styled.input(_templateObject5(), lightGreen);\nvar StatusIndicator = styled.div(_templateObject6(), function (props) {\n  return props.isOverLimit ? 'red' : 'green';\n}); // Component displays the basic table item where the user adds descriptions and calories\n\nvar TableItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableItem, _React$Component);\n\n  function TableItem(props) {\n    var _this;\n\n    _classCallCheck(this, TableItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableItem).call(this, props));\n\n    _this.updateState = function (value, key) {\n      _this.setState(function (prevState) {\n        return set(lensPath(['meal', key]), value, prevState);\n      });\n    };\n\n    _this.state = {\n      meal: props.meal || {}\n    };\n    return _this;\n  }\n\n  _createClass(TableItem, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!equals(prevProps.meal, this.props.meal)) {\n        this.setState({\n          meal: this.props.meal\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          toggleEditing = _this$props.toggleEditing,\n          saveMeal = _this$props.saveMeal,\n          updateMeal = _this$props.updateMeal,\n          _this$props$isEditing = _this$props.isEditing,\n          isEditing = _this$props$isEditing === void 0 ? false : _this$props$isEditing,\n          isOverLimit = _this$props.isOverLimit;\n      var meal = this.state.meal;\n      return React.createElement(Item, {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(StatusIndicator, {\n        isOverLimit: isOverLimit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(PropertyContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Description:\"), isEditing ? React.createElement(StyledInput, {\n        defaultValue: meal.description,\n        onChange: function onChange(_ref) {\n          var target = _ref.target;\n          return _this2.updateState(target.value, \"description\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }) : React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, meal.description)), React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Calories:\"), isEditing ? React.createElement(StyledInput, {\n        defaultValue: meal.calories,\n        onChange: function onChange(_ref2) {\n          var target = _ref2.target;\n          return _this2.updateState(parseInt(target.value), \"calories\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }) : React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, meal.calories)), React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Date Created: \".concat(moment(meal.created_dt, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')))), React.createElement(PropertyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Time Created: \".concat(moment(meal.created_dt, 'YYYY-MM-DD HH:mm:ss').format('HH-mm-ss'))))), React.createElement(Button, {\n        value: \"Delete\",\n        onClick: function onClick() {\n          return _this2.props.deleteMeal(meal);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), isEditing ? React.createElement(React.Fragment, null, React.createElement(Button, {\n        value: \"Save\",\n        onClick: function onClick() {\n          meal.id ? updateMeal(meal.id, meal) : saveMeal(meal);\n          toggleEditing(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Button, {\n        value: \"Cancel\",\n        onClick: function onClick() {\n          return toggleEditing(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })) : React.createElement(Button, {\n        value: \"Edit\",\n        onClick: function onClick() {\n          return toggleEditing(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(ErrorContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(InlineError, {\n        err: this.state.meal.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TableItem;\n}(React.Component);\n\nexport default TableItem;","map":{"version":3,"sources":["/Users/martinbrandt/martin-brandt/calorie-counter/src/components/TableItem.jsx"],"names":["React","styled","Button","set","equals","lensPath","lightGreen","moment","InlineError","Item","div","ErrorContainer","PropertyContainer","PropertyItem","StyledInput","input","StatusIndicator","props","isOverLimit","TableItem","updateState","value","key","setState","prevState","state","meal","prevProps","id","toggleEditing","saveMeal","updateMeal","isEditing","description","target","calories","parseInt","created_dt","format","deleteMeal","error","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/Button\";\nimport { set, equals, lensPath} from \"ramda\";\nimport {lightGreen} from 'variables';\nimport moment from 'moment';\nimport InlineError from 'components/InlineError';\n\nconst Item = styled.div`\n  height: 70px;\n  width: 90%;\n  background-color: white;\n  margin-top: 5px;\n  margin-left: 5px;\n  display:flex;\n  align-items:center;\n  cursor: default;\n  border-radius: 15px;\n  opacity:.9\n`;\n\nconst ErrorContainer = styled.div`\n  margin-left:10px;\n`\n\nconst PropertyContainer = styled.div`\n  width: 50%;\n  display:flex;\n  flex-direction:column;\n  margin: 3px;\n`\nconst PropertyItem = styled.div`\n  padding-left: 10px;\n  display:flex;\n  align-items: flex-start;\n`\n\nconst StyledInput = styled.input`\n  border-top:none;\n  border-left:none;\n  border-right:none;\n  border-bottom: 2px solid ${lightGreen};\n  font-weight: 500;\n  margin-left: 3px;\n`\n\nconst StatusIndicator = styled.div`\n  border-radius:50%;\n  width: 12px;\n  height: 12px;\n  background-color: ${props => props.isOverLimit ? 'red': 'green'};\n  border: 1px solid black\n  margin-left:5px;\n  opacity: .85\n`\n\n// Component displays the basic table item where the user adds descriptions and calories\nclass TableItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: props.meal || {}\n    };\n  }\n\n  updateState = (value, key) => {\n    this.setState(prevState => set(lensPath(['meal', key]), value, prevState));\n  };\n\n  componentDidUpdate(prevProps){\n    if(!equals(prevProps.meal, this.props.meal)){\n      this.setState({meal: this.props.meal})\n    }\n  }\n\n  render() {\n    const {\n      id,\n      toggleEditing,\n      saveMeal,\n      updateMeal,\n      isEditing = false,\n      isOverLimit,\n    } = this.props;\n    const { meal } = this.state;\n\n    return (\n      <Item key={id}>\n        <StatusIndicator isOverLimit={isOverLimit}/>\n        <PropertyContainer>\n          <PropertyItem>\n            <label>Description:</label>\n            {isEditing ? (\n              <StyledInput\n                defaultValue={meal.description}\n                onChange={({target}) => this.updateState(target.value, \"description\")}\n              />\n            ) : (\n              <label>{meal.description}</label>\n            )}\n          </PropertyItem>\n          <PropertyItem>\n            <label>Calories:</label>\n            {isEditing ? (\n              <StyledInput\n                defaultValue={meal.calories}\n                onChange={({target}) => this.updateState(parseInt(target.value), \"calories\")}\n              />\n            ) : (\n              <label>{meal.calories}</label>\n            )}\n          </PropertyItem>\n          <PropertyItem>\n            <label>{`Date Created: ${moment(meal.created_dt, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')}`}</label>\n          </PropertyItem>\n          <PropertyItem>\n            <label>{`Time Created: ${moment(meal.created_dt, 'YYYY-MM-DD HH:mm:ss').format('HH-mm-ss')}`}</label>\n          </PropertyItem>\n        </PropertyContainer>  \n        <Button value=\"Delete\" onClick={() => this.props.deleteMeal(meal)} />\n        {isEditing ? (\n          <>\n            <Button value=\"Save\" onClick={() => {\n                    meal.id ? updateMeal(meal.id, meal) : saveMeal(meal);\n                    toggleEditing(id);\n                }} />\n            <Button value=\"Cancel\" onClick={() => toggleEditing(id)} />\n          </>\n        ) : (\n          <Button value=\"Edit\" onClick={() => toggleEditing(id)} />\n        )}\n        <ErrorContainer>          \n          <InlineError err={this.state.meal.error}/>\n        </ErrorContainer>\n      </Item>\n    );\n  }\n}\n\nexport default TableItem;\n"]},"metadata":{},"sourceType":"module"}